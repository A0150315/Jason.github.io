(function(n){function e(e){for(var r,o,s=e[0],l=e[1],c=e[2],d=0,f=[];d<s.length;d++)o=s[d],Object.prototype.hasOwnProperty.call(i,o)&&i[o]&&f.push(i[o][0]),i[o]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(n[r]=l[r]);u&&u(e);while(f.length)f.shift()();return a.push.apply(a,c||[]),t()}function t(){for(var n,e=0;e<a.length;e++){for(var t=a[e],r=!0,s=1;s<t.length;s++){var l=t[s];0!==i[l]&&(r=!1)}r&&(a.splice(e--,1),n=o(o.s=t[0]))}return n}var r={},i={app:0},a=[];function o(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.m=n,o.c=r,o.d=function(n,e,t){o.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},o.r=function(n){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"===typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)o.d(t,r,function(e){return n[e]}.bind(null,r));return t},o.n=function(n){var e=n&&n.__esModule?function(){return n["default"]}:function(){return n};return o.d(e,"a",e),e},o.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},o.p="/Jason.github.io/";var s=window["webpackJsonp"]=window["webpackJsonp"]||[],l=s.push.bind(s);s.push=e,s=s.slice();for(var c=0;c<s.length;c++)e(s[c]);var u=l;a.push([0,"chunk-vendors"]),t()})({0:function(n,e,t){n.exports=t("cd49")},"0670":function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t("9ab4"),i=r.__importDefault(t("2b0e")),a=r.__importDefault(t("bb71"));i.default.use(a.default),e.default=new a.default({theme:{themes:{light:{primary:"#2E7D32",secondary:"#4CAF50"}}}})},"07de":function(n,e,t){},"094d":function(n,e,t){"use strict";t.r(e);var r=t("3e70"),i=t.n(r);for(var a in r)"default"!==a&&function(n){t.d(e,n,(function(){return r[n]}))}(a);e["default"]=i.a},"0edd":function(n,e,t){"use strict";var r=t("49f9"),i=t.n(r);i.a},"0f82":function(n,e,t){"use strict";var r=t("9ab0"),i=t.n(r);i.a},1398:function(n,e,t){"use strict";var r=t("63b1"),i=t.n(r);i.a},1755:function(n,e,t){},"299d":function(n,e,t){"use strict";t.d(e,"a",(function(){return r})),t.d(e,"b",(function(){return i}));var r=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"what-will-i-eat"},[t("h1",[n._v("素菜")]),t("ul",n._l(n.VegetarianDishList,(function(e,r){return t("li",{key:r},[n._v(" "+n._s(e)+" ")])})),0),t("h1",[n._v("荤菜")]),t("ul",n._l(n.ChivesList,(function(e,r){return t("li",{key:r},[n._v(" "+n._s(e)+" ")])})),0),t("h1",[n._v("烹饪方式")]),t("ul",n._l(n.CookMethodsList,(function(e,r){return t("li",{key:r},[n._v(" "+n._s(e)+" ")])})),0),t("button",{on:{click:n.getResult}},[n._v(" 来吧 ")]),t("p",[n._v(" "+n._s(n.result)+" ")])])},i=[]},"2af6":function(n,e,t){"use strict";var r=t("970b"),i=t("5bc3"),a=t("6b58"),o=t("36c6"),s=t("ed6d");Object.defineProperty(e,"__esModule",{value:!0});var l=t("9ab4"),c=t("60a3"),u=t("d47e"),d=function(n){function e(){var n;return r(this,e),n=a(this,o(e).apply(this,arguments)),n.optionsSymbol=u.optionsSymbol,n.selectedOpitonsID=-1,n}return s(e,n),i(e,[{key:"optionsHandler",value:function(n){this.selectedOpitonsID=n,this.onChange(n)}}]),e}(c.Vue);l.__decorate([c.Prop({default:"0"})],d.prototype,"serialNumber",void 0),l.__decorate([c.Prop({default:{"-1":!1}})],d.prototype,"errorMap",void 0),l.__decorate([c.Prop({default:function(){}})],d.prototype,"onChange",void 0),l.__decorate([c.Prop({default:function(){return{title:"标题",id:0,options:[{id:1,name:"选项1"},{id:2,name:"选项2"},{id:3,name:"选项3"},{id:4,name:"选项4"}]}}})],d.prototype,"data",void 0),d=l.__decorate([c.Component],d),e.default=d},3197:function(n,e,t){"use strict";t.d(e,"a",(function(){return r})),t.d(e,"b",(function(){return i}));var r=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("v-app",[t("v-navigation-drawer",{attrs:{clipped:n.$vuetify.breakpoint.lgAndUp,app:""},model:{value:n.drawer,callback:function(e){n.drawer=e},expression:"drawer"}},[t("v-list",{attrs:{dense:""}},[n._l(n.items,(function(e,r){return[e.heading?t("v-row",{key:e.heading,attrs:{align:"center"}},[t("v-col",{attrs:{cols:"6"}},[e.heading?t("v-subheader",[n._v(" "+n._s(e.heading)+" ")]):n._e()],1),t("v-col",{staticClass:"text-center",attrs:{cols:"6"}},[t("v-icon",[n._v("mdi-alert-circle-outline")]),t("span",{staticClass:"body-2 black--text"},[n._v(" BUILDING...")])],1)],1):e.divider?t("v-divider",{key:r,staticClass:"my-4",attrs:{dark:""}}):e.children?t("v-list-group",{key:e.text,attrs:{"prepend-icon":e.model?e.icon:e["icon-alt"],"append-icon":""},scopedSlots:n._u([{key:"activator",fn:function(){return[t("v-list-item-content",[t("v-list-item-title",[n._v(" "+n._s(e.text)+" ")])],1)]},proxy:!0}],null,!0),model:{value:e.model,callback:function(t){n.$set(e,"model",t)},expression:"item.model"}},n._l(e.children,(function(e,r){return t("v-list-item",{key:r,attrs:{link:""}},[e.icon?t("v-list-item-action",[t("v-icon",[n._v(n._s(e.icon))])],1):n._e(),t("v-list-item-content",[t("v-list-item-title",[n._v(" "+n._s(e.text)+" ")])],1)],1)})),1):t("v-list-item",{key:e.text,attrs:{to:e.to,replace:""}},[t("v-list-item-action",[t("v-icon",[n._v(n._s(e.icon))])],1),t("v-list-item-content",[t("v-list-item-title",[n._v(" "+n._s(e.text)+" ")])],1)],1)]}))],2)],1),t("v-app-bar",{attrs:{"clipped-left":n.$vuetify.breakpoint.lgAndUp,app:"",color:"green darken-3",dark:""}},[t("v-app-bar-nav-icon",{on:{click:function(e){e.stopPropagation(),n.drawer=!n.drawer}}}),t("v-toolbar-title",{staticClass:"ml-0 pl-4",staticStyle:{width:"300px"}},[t("span",{staticClass:"hidden-sm-and-down"},[n._v("This is Cupertino UI")])]),t("v-text-field",{staticClass:"hidden-sm-and-down",attrs:{flat:"","solo-inverted":"","hide-details":"","prepend-inner-icon":"mdi-magnify",label:"Search"}}),t("v-spacer"),t("v-btn",{attrs:{icon:""}},[t("v-icon",[n._v("mdi-bell")])],1),t("v-tooltip",{attrs:{bottom:""},scopedSlots:n._u([{key:"activator",fn:function(e){var r=e.on;return[t("v-btn",n._g({attrs:{href:"https://github.com/A0150315",icon:"",large:"",target:"_blank"}},r),[t("v-avatar",{attrs:{size:"32px",item:""}},[t("v-img",{attrs:{src:"https://avatars3.githubusercontent.com/u/18693417?s=40&v=4",alt:"avatars"}})],1)],1)]}}])},[t("span",[n._v("My Github")])])],1),t("v-content",[t("v-container",{attrs:{fluid:""}},[t("v-row",[n._t("default")],2)],1),t("v-btn",{attrs:{bottom:"",color:"red",dark:"",fab:"",fixed:"",right:""},on:{click:function(e){n.dialog=!n.dialog}}},[t("v-icon",[n._v("mdi-plus")])],1)],1)],1)},i=[]},"325a":function(n,e,t){"use strict";t.r(e);var r=t("ae18"),i=t("9f6c");for(var a in i)"default"!==a&&function(n){t.d(e,n,(function(){return i[n]}))}(a);t("ad30");var o=t("2877"),s=t("6544"),l=t.n(s),c=t("8336"),u=t("b0af"),d=t("99d9"),f=t("ce7e"),p=t("132d"),m=t("2db4"),b=t("2fa4"),g=t("8654"),h=t("71d9"),v=t("2a7f"),y=Object(o["a"])(i["default"],r["a"],r["b"],!1,null,"045bf7ce",null);e["default"]=y.exports,l()(y,{VBtn:c["a"],VCard:u["a"],VCardActions:d["b"],VCardText:d["d"],VDivider:f["a"],VIcon:p["a"],VSnackbar:m["a"],VSpacer:b["a"],VTextField:g["a"],VToolbar:h["a"],VToolbarTitle:v["c"]})},3408:function(n,e,t){"use strict";t.r(e);var r=t("c522"),i=t.n(r);for(var a in r)"default"!==a&&function(n){t.d(e,n,(function(){return r[n]}))}(a);e["default"]=i.a},"3a0b":function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t("9ab4"),i=r.__importDefault(t("2b0e")),a=r.__importDefault(t("2f62"));i.default.use(a.default),e.default=new a.default.Store({state:{},mutations:{},actions:{}})},"3ab0":function(n,e,t){"use strict";t.r(e);var r=t("3197"),i=t("c45f");for(var a in i)"default"!==a&&function(n){t.d(e,n,(function(){return i[n]}))}(a);var o=t("2877"),s=t("6544"),l=t.n(s),c=t("7496"),u=t("40dc"),d=t("5bc1"),f=t("8212"),p=t("8336"),m=t("62ad"),b=t("a523"),g=t("a75b"),h=t("ce7e"),v=t("132d"),y=t("adda"),_=t("8860"),x=t("56b0"),w=t("da13"),k=t("1800"),j=t("5d23"),D=t("f774"),T=t("0fd9"),S=t("2fa4"),C=t("e0c7"),A=t("8654"),O=t("2a7f"),V=t("3a2f"),L=Object(o["a"])(i["default"],r["a"],r["b"],!1,null,null,null);e["default"]=L.exports,l()(L,{VApp:c["a"],VAppBar:u["a"],VAppBarNavIcon:d["a"],VAvatar:f["a"],VBtn:p["a"],VCol:m["a"],VContainer:b["a"],VContent:g["a"],VDivider:h["a"],VIcon:v["a"],VImg:y["a"],VList:_["a"],VListGroup:x["a"],VListItem:w["a"],VListItemAction:k["a"],VListItemContent:j["g"],VListItemTitle:j["k"],VNavigationDrawer:D["a"],VRow:T["a"],VSpacer:S["a"],VSubheader:C["a"],VTextField:A["a"],VToolbarTitle:O["c"],VTooltip:V["a"]})},"3d48":function(n,e,t){"use strict";t.r(e);var r=t("b636"),i=t.n(r);for(var a in r)"default"!==a&&function(n){t.d(e,n,(function(){return r[n]}))}(a);e["default"]=i.a},"3dfd":function(n,e,t){"use strict";t.r(e);var r=t("4f55"),i=t("6f68");for(var a in i)"default"!==a&&function(n){t.d(e,n,(function(){return i[n]}))}(a);t("5c0b");var o=t("2877"),s=Object(o["a"])(i["default"],r["a"],r["b"],!1,null,null,null);e["default"]=s.exports},"3e70":function(n,e,t){"use strict";t("b0c0"),Object.defineProperty(e,"__esModule",{value:!0});var r=t("9ab4"),i=r.__importDefault(t("2b0e")),a=t("4a5b"),o=r.__importDefault(t("e0c1")),s=t("4ad6"),l=t("5034");e.default=i.default.extend({computed:{html:function(){return o.default(a.getBlogsDetails(this.$route.params.id),{sanitize:!0})}},beforeRouteUpdate:function(n,e,t){document.title=s.DATA[+n.params.id].name,t()},mounted:function(){sessionStorage.tempTitle=document.title,document.title=s.DATA[+this.$route.params.id].name},destroyed:function(){document.title=sessionStorage.tempTitle||l.appName,sessionStorage.removeItem("tempTitle")}})},"3f05":function(n,e,t){"use strict";t.r(e);var r=t("299d"),i=t("3408");for(var a in i)"default"!==a&&function(n){t.d(e,n,(function(){return i[n]}))}(a);var o=t("2877"),s=Object(o["a"])(i["default"],r["a"],r["b"],!1,null,null,null);e["default"]=s.exports},"40a8":function(n,e,t){},"49d1":function(n,e){n.exports="1. 为什么面向一个客户开发的专业化软件不仅仅包含所开发和交付的程序？\r\n\r\n   ```\r\n   专业化软件除了开发者之外还有其他用户会使用，而且专业化软件通常都是由团队而非个人开发的；一个专业化开发的软件系统通常远不止一个程序，系统可能包含多个程序以及用于设置这些程序的配置文件。系统还可能包括描述系结构的系统文档、解释如何使用该系统的用户文档，以及告知用户下载最新产品信息的Web网站；如果你的软件有其他用户并且其他工程师会进行修改的话，你就必须再程序源代码之外提供其他附加信息。\r\n   ```\r\n\r\n2. 通用的软件产品开发和定制化软件开发之间最重要的区别是什么？这在实践中对于通用软件产品的用户意味着什么？\r\n\r\n   ```\r\n   1) 重要区别：\r\n       在通用软件的开发过程中，详细说明（规格说明书）由产品开发者来制定，在定制软件产品开发过程中，详细说明（规格说明书）由客户来制定开发者必须按客户要求进行开发。\r\n   2) 意义：\r\n       意味着通用软件很难满足通用软件客户的特殊需求。如可靠性、安全性、快捷性。\r\n   ```\r\n\r\n3. 软件产品应该具有的 4 个重要属性是什么？另外举出 4 个可能有意义的属性。\r\n\r\n   ```\r\n   1) 重要属性：可维护性、可依赖性和安全性、有效性和可接受性。\r\n   2) 可能有意义的属性:可复用性、可分发性、可移植性和互用性。\r\n   ```\r\n\r\n4. 除了异构型、企业和社会的变革、可信和信息安全之外，说一说软件工程在 21 世纪有可能面对的其他问题和挑战（环境）。\r\n\r\n   ```\r\n    交付上的挑战：许多传统的软件工程技术需要耗费大量的时间，用于提高软件质量。而今天的软件制作必须响应快、更换迅速，支持软件也必须同样快地进行更换。所以这个挑战是：在不损及系统质量的前提下，缩短大型、复杂系统的移交时间。\r\n   ```\r\n\r\n5. 参考各种应用类型，举例说明为什么设计和开发不同类型的应用需要特殊化的软件工程技术。\r\n\r\n   > 应用类型：独立的应用、基于事务的交互式应用、嵌入式控制系统、批处理系统、娱乐系统、建模和仿真系统、数据收集和分析系统、系统之系统\r\n\r\n   ```\r\n   如汽车上年的嵌入式控制系统对安全性要求极高，在车上安装是要烧制到ROM中，在这里的交互在这里是很少的（或许根本就没有）。基于Web式系统更适合用于迭代式开发和交互。而基于Web的系统编程使用的如Ruby一类的脚本语言，完全不适合嵌入式系统工程。\r\n   ```\r\n\r\n6. 解释为什么过程、可依赖性、需求管理、复用这些基本的软件工程原则与所有类型的软件系统都相关。\r\n\r\n   ```\r\n    软件工程的基本思想：\r\n        1) 软件系统开发过程应当是受管理的并且被开发人员所理解；\r\n        2) 可靠性和性能对所有类型的系统来说都很重要；\r\n        3) 理解和管理系统规格说明和需求是很重要的；\r\n        4) 尽可能高效地使用已有资源。\r\n\r\n    软件工程也是从无数实践中提炼出来的一门科学，沟通、需求分析、设计建模、编程、测试和支持都是软件工程方法所依赖于一组的本原则。这些思想和原则涵盖了软件工程所有技术，是软件开发不可缺少的一部分。所以软件工程的基本思想适用于所有的软件系统。\r\n   ```\r\n\r\n7. 解释 Web 的普遍使用是如何改变软件系统和软件系统工程的。\r\n\r\n   ```\r\n   1) 软件复用已经成为构建基于Web的系统的主要方法；\r\n   2) 人们普遍承认提前确定这些系统地所有需求是不切合实际的；\r\n   3) 这些软件部署在Web服务器上，这使得修改和升级软件变得更加便宜；\r\n   4) 软件是高度分布式的。\r\n   ```\r\n\r\n8. 讨论一下职业工程师是否应该和医生或律师一样颁发资格证书。\r\n\r\n   ```\r\n   我认为：可以给职业人员颁发某种软件技术方面的资格证书以便公司能够快速确认从业人员具备的技能和让社会大众对从业人员的技术资质有更简单直观的了解。\r\n   ```\r\n\r\n9. 对于 ACM/IEEE 职业道德准则中的每一条举出一个恰当的例子加以说明。\r\n\r\n   ```\r\n   1) 公众感：软件工程从业人员应该始终与公众利益保持一致。不应该通过软件给某些利益集团谋取私利从而损害广大人民群众的利益。 \r\n   2) 客户和雇主:不能只站在雇主这边为雇主最求利益最大化而不顾客户利益。 \r\n   3) 产品：不能做一个没有完成或某方面如安全性、稳定性未达标的产品给客户。\r\n   4) 判断力：软件从业人员应具备达到判断力，知道自己做的产品不是刻意用来危害社会的。\r\n   5) 管理：合理管理软件开发方法，不能官僚主义全听领导一句话。\r\n   6) 职业感：大家都是从事正当行业的，要多想想怎么为社会谋取福利。\r\n   7) 同事：黑社会都说以和为贵，团队成员都是奔着一个目标去的不要由于一些小小分歧就产生恩怨,周恩来说要求同存异。\r\n   8) 自己：注意要有健康积极的职业和生活方式。\r\n   ```\r\n\r\n10. 为了反恐，很多国家正在计划开发或正在开发一种对其大量公民及其行动跟踪的计算机系统。显然这是侵犯个人隐私权的做法。对开发此类系统的道德伦理问题进行讨论。\r\n\r\n    ```\r\n    太难了\r\n    ```\r\n"},"49f9":function(n,e,t){},"4a5b":function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t("4ad6");function i(n,e){return parseInt(String(Math.random()*(e-n+1)),10)+n}function a(n){return Array.isArray(n)||null===n?"":r.DATA[+n].content||n}e.randomNumber=i,e.getBlogsDetails=a},"4ad6":function(n,e,t){"use strict";t("99af"),t("d81d"),t("b0c0");var r=t("448a");Object.defineProperty(e,"__esModule",{value:!0});var i=t("9ab4"),a=i.__importDefault(t("6837")),o=i.__importDefault(t("c49c")),s=i.__importDefault(t("9cb1")),l=i.__importDefault(t("b20b")),c=i.__importDefault(t("49d1")),u=i.__importDefault(t("6223"));e.DATA=[{content:a.default,name:"JS继承的实现方式"},{content:o.default,name:"Nuxt配合Node在实际生产中的应用"},{content:s.default,name:"从0开始学习Typescript"},{content:l.default,name:"简单的富文本编辑器实践"},{content:c.default,name:"软件工程概述"},{content:u.default,name:"软件过程"}],e.default=[{divider:!0},{heading:"Blogs"}].concat(r(e.DATA.map((function(n,e){return{icon:null,text:n.name,to:"/blogs/".concat(e)}}))))},"4f55":function(n,e,t){"use strict";t.d(e,"a",(function(){return r})),t.d(e,"b",(function(){return i}));var r=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("Layout",[t("router-view")],1)},i=[]},5034:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.appName="This is Cupertino UI"},"5c0b":function(n,e,t){"use strict";var r=t("1755"),i=t.n(r);i.a},"5f86":function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t("9ab4"),i=r.__importDefault(t("2b0e")),a=r.__importDefault(t("8c4f")),o=r.__importDefault(t("bb51")),s=r.__importDefault(t("3f05")),l=r.__importDefault(t("325a")),c=r.__importDefault(t("e72f")),u=r.__importDefault(t("95e5"));i.default.use(a.default),e.default=new a.default({mode:"hash",base:"/Jason.github.io/",routes:[{path:"/",name:"home",component:o.default},{path:"/what-will-i-eat/index",name:"what-will-i-eat",component:s.default},{path:"/generate-svg/index",name:"generate-svg",component:l.default},{path:"/blogs/:id",name:"blogs",component:c.default,children:[{path:"",component:u.default}]}]})},6223:function(n,e){n.exports="1. 针对以下每个系统，请推荐合适的可以管理其开发的基础的通用软件过程模型，按照所开发系统的类型给出你的理由：\r\n\r\n   - 一个汽车中的防抱死刹车控制系统；\r\n   - 一个支持软件维护的虚拟现实系统；\r\n   - 一个准备替换现有系统的大学会计系统；\r\n   - 一个交互式的旅行规划系统，可以帮助用户以最小的环境影响规划旅程。\r\n\r\n   ```\r\n    1) 防抱死刹车控制系统，是一个对安全至关重要的系统，因此在实施之前需要进行大量的前期分析。当然，它需要一种计划驱动的方法进行开发，并仔细分析需求。因此，瀑布模型是最适合使用的方法，可能是在不同开发阶段之间进行了正式转换；\r\n    2) 虚拟现实系统，是一个需求会发生变化，并且会有大量的用户界面组件的系统。带有某些UI原型的增量开发是最合适的模型。可以使用敏捷开发。\r\n    3) 大学会计系统，是一个其要求众所周知的系统，它将与许多其他系统（例如研究资助管理系统）一起在环境中使用。因此，基于复用的方法可能适合于此。\r\n    4) 交互式旅行计划系统具有复杂用户界面但必须稳定可靠的系统。增量开发方法最合适，因为随着获得系统的实际用户体验，系统需求将发生变化。\r\n   ```\r\n\r\n2. 为什么增量式开发是开发业务软件系统最有效的方法？为什么这种模型不那么适用于实时系统工程？\r\n\r\n   ```\r\n    1) 优势：降低了实现需求变更的成本；在开发过程中更容易得到客户对于已完成的开发工作的反馈意见；客户可以更早地使用软件并从中获得价值。\r\n    1) 劣势：过程不可见；伴随着新的增量的添加，系统结构会逐渐退化。\r\n   ```\r\n\r\n3. 考虑面向复用的软件工程的集成和配置过程模型。为什么在这个过程中要重复需求工程活动？\r\n\r\n   ```\r\n   您需要重复需求工程活动，因为根据要重用的系统/组件的功能调整系统需求是至关重要的。 这些活动是：\r\n    1) 在最初的活动中，你了解系统的功能并针对系统应做的工作提出了广泛的要求。 这些应该足够详细地表达，以便你可以将它们用作确定系统/组件满足某些要求的基础，因此可以重复使用；\r\n    2) 选择了系统/组件后，您需要进行更详细的需求工程活动，以检查复用软件的功能是否满足业务需求，并确定所需的更改和添加。\r\n   ```\r\n\r\n4. 为什么在需求工程过程中区分用户需求开发和系统需求开发是重要的？\r\n\r\n   ```\r\n   用户和系统要求之间存在根本差异，这意味着应分开考虑它们。\r\n    1) 用户需求旨在从用户的角度描述系统的功能，并且用户必须理解这些需求。它们应该用自然语言来表达，而不能太详细地表达，以允许实现的灵活性。参与该过程的人员必须能够了解用户的环境和应用程序域。\r\n    2) 系统要求比用户要求更为详细，旨在成为系统的精确规范，它可能是系统合同的一部分。它们也可以用于外包开发并且开发团队需要完整说明应开发内容的情况。建立用户需求后，系统需求便会制定出来。\r\n   ```\r\n\r\n5. 用一个例子解释为什么体系结构设计、数据库设计、接口设计、构件设计这些设计活动是相互依赖的。\r\n\r\n   ```\r\n\r\n   ```\r\n\r\n6. 为什么软件测试应当总是一种增量、分阶段的活动？程序员是测试他们自己所开发的程序的最佳候选人吗？\r\n\r\n   ```\r\n   1) 理想情况下软件缺陷可以在测试过程的早期被发现，而接口问题可以在系统集成时被发现。然而，在发现缺陷时，必须对程序进行调试，测试过程中的其他一些阶段可能需要重复进行。程序构件中的错误可能会在系统测试过程中暴露出来。因此，这是一个迭代化的过程，后面阶段中的信息会反馈给该过程早期的一些阶段；\r\n   2) 不是，程序员构造自己的测试数据，并在代码开发过程中增量地测试代码。程序员了解所开发地构件，因此时生成测试用例地最佳人选。\r\n   ```\r\n\r\n7. 为什么在复杂系统中变化是不可避免的？举出一些有助于预测可能的变化并使所开发的软件更适应变化的软件过程活动的例子（除了原型和增量交付之外）。\r\n\r\n   ```\r\n   系统变化是不可避免，是因为将它们安装在环境中后，环境就会适应它们，并且这种适应自然会产生新的/不同的系统要求。此外，系统的环境是动态的，并且由于业务，业务目标和业务策略的更改而不断产生新的要求。除非该系统适合于反映这些要求，否则其设施将与适应业务所需的设施不合时宜，因此，其作用将越来越小。适应变化的流程活动示例如下：\r\n    1) 记录需求基本意向，以便知道包含需求的原因。这有助于未来的变化；\r\n    2) 需求可追溯性，显示需求之间以及需求与系统设计/代码之间的依赖关系；\r\n    3) 设计建模，其中设计模型记录软件的结构；\r\n    4) 代码重构可提高代码质量，从而使其更易于更改。\r\n   ```\r\n\r\n8. 假设你已经开发了一个软件系统原型，且你的经理对其印象深刻。她提出应该将这个原型根据需要增加一些新特性后作为一个生产系统投入使用。这避免了系统开发的一些开销并能使系统可理解、可用。写一份简单的报告向你的经理解释为什么原型系统通常不应该作为生产系统使用。\r\n\r\n   ```\r\n    系统原型我理解为是一个现成的需求系统，只有一些现成的简单的逻辑，程序员在其之上开发必须先弄懂源码，并在其上开发，无论从成本、实现方式、维护方式、鲁棒性上来讲，都是吃力不讨的操作。\r\n   ```\r\n\r\n9. 指出 SEI 的能力成熟度框架中所包含的过程评估和改进方法的两个优点和缺点。\r\n\r\n   ```\r\n   优点：\r\n    1) 该方法提供了一种测量过程状态的方法，以及一种用于引入过程改进的结构化方法。\r\n    2) 这是一种在过程改进中借鉴他人经验的方法。\r\n   缺点：\r\n    1) 与任何度量系统一样，有一种趋势是引入改进以提高度量的等级，而不是专注于满足实际业务目标的改进。\r\n    2) 成熟度模型方法昂贵且操作繁琐。 它并不真正适合使用敏捷开发的组织。\r\n   ```\r\n\r\n10. 从历史上看，新的技术的出现经常导致劳动力市场的深远变革，并使得人们的工作被取代（至少是暂时性的）。讨论广泛的过程自动化的引入时候很有可能对软件工程师产生同样的后果。如果你不认为会如此，解释为什么不会。如果你认为这样会减少工作机会，那么受影响的工程师被动地或主动地抵制该技术地引入是否道德\r\n\r\n    ```\r\n\r\n    ```\r\n"},6282:function(n,e,t){"use strict";t.d(e,"a",(function(){return r})),t.d(e,"b",(function(){return i}));var r=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"md-layout",domProps:{innerHTML:n._s(n.html)}})},i=[]},"63b1":function(n,e,t){},6836:function(n,e,t){"use strict";var r=t("07de"),i=t.n(r);i.a},6837:function(n,e){n.exports="# 测试用"},"6b61":function(n,e,t){"use strict";t.d(e,"a",(function(){return r})),t.d(e,"b",(function(){return i}));var r=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{class:["topic",{topic__error:Object.values(n.errorMap)[0]}]},[t("p",{staticClass:"title"},[n._v("#"+n._s(n.serialNumber)+"、"+n._s(n.data.title))]),t("main",{staticClass:"options-block"},n._l(n.data.options,(function(e,r){return t("a",{key:e.id,class:["options",{options__selected:e.id===n.selectedOpitonsID},{options__error:n.errorMap[e.id]}],on:{click:function(){return n.optionsHandler(e.id)}}},[n._v(" "+n._s(n.optionsSymbol[+r])+" 、"+n._s(e.name)+" ")])})),0)])},i=[]},"6f68":function(n,e,t){"use strict";t.r(e);var r=t("72de"),i=t.n(r);for(var a in r)"default"!==a&&function(n){t.d(e,n,(function(){return r[n]}))}(a);e["default"]=i.a},"72de":function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t("9ab4"),i=r.__importDefault(t("2b0e")),a=r.__importDefault(t("3ab0"));e.default=i.default.extend({name:"App",components:{Layout:a.default},data:function(){return{}}})},"88e1":function(n,e,t){"use strict";t.d(e,"a",(function(){return r})),t.d(e,"b",(function(){return i}));var r=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"home"},[n._l(n.topicList,(function(e,r){return t("Topic",{key:r,attrs:{data:e,serialNumber:r+1,errorMap:n.errorList[r],onChange:n.topicHandler(r)}})})),t("button",{class:["button",{button__down:n.isSubmitBtnPressing}],on:{click:n.submitAndCheck,mousedown:function(e){n.isSubmitBtnPressing=!0}}},[n._v(" 提交 ")])],2)},i=[]},"95e5":function(n,e,t){"use strict";t.r(e);var r=t("6282"),i=t("094d");for(var a in i)"default"!==a&&function(n){t.d(e,n,(function(){return i[n]}))}(a);t("0edd"),t("1398");var o=t("2877"),s=Object(o["a"])(i["default"],r["a"],r["b"],!1,null,"a6e2ff00",null);e["default"]=s.exports},"9ab0":function(n,e,t){},"9cb1":function(n,e){n.exports='在学习**Typescript**之前，早已听过、看过很多人对其的赞扬，**强类型**、**静态类型**等等的关键词一直伴随着我对它的认知。经过一段时间（又或者是断断续续）的学习，也大致算是入门了。\r\n\r\n#### 以下文章是我在学习中的一些心得与记录：\r\n# 编辑器以及相关配置\r\n- 安装 Typescript\r\n\r\n```\r\nnpm install -g typescript\r\n```\r\n- 编辑器方面我们选择 VSCode ，Typescript 本身就是由 Microsoft 开源的，配置自家的编辑器，对 Typescript 的第一方支持，体验简直不要太爽，ctrl 配置 鼠标移到对应变量、接口、类等字段上会有惊喜哦；\r\n- 插件方面，TSLint 是必须的，它可以在编辑器中就提示你语法的错误，减少 Fail completion ，红红的一条波浪线去掉的那一瞬间，简直是强迫症的福利；\r\n- 以上准备好后，我们需要给Typescript添加相关编译配置了( Typescript 必须编译成 Javascript 才能被直接运行，类似 Java -> Class )，首先需要在根目录新建文件 —— “ tsconfig.json ”，相关配置可参考[官网文档](https://www.tslang.cn/docs/handbook/compiler-options.html)。我的常用配置：\r\n\r\n```json\r\n// tsconfig.json\r\n{\r\n  "compilerOptions": {\r\n    "target": "es5",\r\n    // 这可以对 `this` 上的数据属性进行更严格的推断\r\n    "strict": true,\r\n    // 如果使用 webpack 2+ 或 rollup，可以利用 tree-shake:\r\n    "module": "es2015",\r\n    "moduleResolution": "node",\r\n    "sourceMap": true,\r\n    // 此选项可以给ts文件编译时自动生成声明文件，我在一些需要把ts转换成js的情况下开启\r\n    "declaration": true  \r\n  }\r\n}\r\n```\r\n- 以上已经把运行ts最简单的平台给配置好了，对于没有用过ts的同学，其实在这里或许会有点云里雾里的感觉，不过没事，后面慢慢就孰能生巧了。\r\n\r\n# 编写第一个ts文件并运行它\r\n- 新建文件 test.ts\r\n\r\n```ts\r\n// test.ts\r\nconsole.log(\'Hello World!\')\r\n```\r\n- 此时目录结构如下\r\n\r\n![image](https://user-images.githubusercontent.com/18693417/43575454-76f380ca-9679-11e8-9cfb-9f2646021e4e.png)\r\n\r\n- 编译ts\r\n    - 使用VSCode的快捷键 Shift + Ctrl + B 开启如下选择框：\r\n\r\n    ![image](https://user-images.githubusercontent.com/18693417/43575627-e4dc61e2-9679-11e8-9f9a-e1d38274c280.png)\r\n    - 这里选哪个都可以，选择“构建”，则表示编译一次就退出编译；选择“监视”，则相当于开启了“watch”选项，编译时会一直监听ts文件的改变，修改一次编译一次；我这里选择“构建”；\r\n    - 构建后，目录结构如下：\r\n    \r\n    ![image](https://user-images.githubusercontent.com/18693417/43575839-658f43b8-967a-11e8-9d29-4f6ec02192a9.png)\r\n    \r\n    - .d.ts文件是相应ts的[声明文件](https://www.tslang.cn/docs/handbook/declaration-files/introduction.html)，具体可以参考官方文档； .js 则是相应ts文件构建编译后的js文件，内部跟ts源文件大致相同：\r\n\r\n    ![image](https://user-images.githubusercontent.com/18693417/43576065-f8daa13a-967a-11e8-9765-b226b9e4458e.png)\r\n- **node test** 运行一下\r\n- 结果：\r\n\r\n![image](https://user-images.githubusercontent.com/18693417/43576137-2df6db36-967b-11e8-8b48-e8b9ab4bc1db.png)\r\n- 完美~\r\n# 为已有的Webpack项目添加ts语法支持\r\n> 需要注意：新版的Typescript（编写这篇心得时，Typescript的版本刚更新到**3.0**）需要**webpack4**+版本才能正常运行\r\n- 假设目录结构如下：\r\n\r\n```\r\n│  .babelrc                               // babel配置文件\r\n│  .gitignore\r\n│  index.html                             // 页面文件\r\n│  index.js                               // 入口文件\r\n│  package-lock.json\r\n│  package.json                           // npm init\r\n│  webpack.config.js                      // webpack 配置文件\r\n│\r\n└─dist                                    // 打包后的目录\r\n        bundle.js\r\n        index.html\r\n```\r\n- 这是一个AngularJs 1.5.8 的项目，其入口文件代码如下，主要是测试Angular.config和Angular.run的执行顺序：\r\n\r\n```js\r\nrequire(\'angular\');\r\n\r\nvar myApp = angular.module("init", [ "exampleApp.Services", "exampleApp.Directives"]);\r\n\r\nmyApp.constant("startTime", new Date().toLocaleString());\r\nmyApp.config(function (startTime) {\r\n    console.log("Main module config: " + startTime);\r\n});\r\nmyApp.run(function (startTime) {\r\n    console.log("Main module run: " + startTime);\r\n})\r\n\r\nangular.module("exampleApp.Directives", [])\r\n    .directive("highlight", function ($filter) {\r\n        var dayFilter = $filter("dayName");\r\n        return function (scope, element, attrs) {\r\n            if (dayFilter(scope.day) == attrs["highlight"]) {\r\n                element.css("color", "red");\r\n            }\r\n        }\r\n    })\r\n\r\nvar now = new Date();\r\nmyApp.value("nowValue", now);\r\nangular.module("exampleApp.Services", [])\r\n    .service("days", function (nowValue) {\r\n        this.today = nowValue.getDay();\r\n        this.tomorrow = this.today + 1;\r\n    })\r\n    .config(function () {\r\n        console.log("Services module config: (no time)");\r\n    })\r\n    .run(function (startTime) {\r\n        console.log("Services module run: " + startTime);\r\n    })\r\n```\r\n- 此时项目一切正常，我们开始为其添加ts语法支持；\r\n- 目录下加入tsconfig.json配置文件：\r\n\r\n```\r\n│  .babelrc                          // babel配置文件\r\n│  .gitignore\r\n│  index.html                        // 页面文件\r\n│  index.js                          // 入口文件\r\n│  package-lock.json\r\n│  package.json                      // npm init\r\n│  tsconfig.json --------------------// ts配置文件\r\n│  webpack.config.js                 // webpack 配置文件\r\n│\r\n└─dist                               // 打包后的目录\r\n        bundle.js\r\n        index.html\r\n```\r\n- 对 webpack 添加对 typescript 支持：\r\n\r\n```\r\nnpm i -D ts-loader typescript\r\n```\r\n\r\n```js\r\n// 在 module.rules 添加 ts-loader 并修改入口文件为index.ts\r\n{\r\n        test: /\\.ts|\\.tsx$/,\r\n        loader: \'ts-loader\',\r\n        exclude: /node_modules/,\r\n}\r\n```\r\n- 把目录下的index.js改为index.ts文件，此时配合VSCode，index.ts肯定是一堆红色波浪线的，如下\r\n\r\n![image](https://user-images.githubusercontent.com/18693417/43635605-2e00bcba-9742-11e8-8d29-a05d71c17527.png)\r\n- ### 开始修复小红线；\r\n- 为 index.ts 添加声明文件\r\n    - 在index.ts的目录下新建index.d.ts文件\r\n\r\n```ts\r\n// index.d.ts\r\n/**\r\n * 通过路径导入模块\r\n * @param {string} moduleName\r\n * @returns {*}\r\n */\r\ndeclare function require(moduleName: string): any;\r\n```\r\n- 在 index.ts 中导入声明文件\r\n\r\n```ts\r\n// index.ts开头插入\r\n/// <reference path="./index.d.ts" />\r\n```\r\n- “require” 的小红线消失\r\n\r\n![image](https://user-images.githubusercontent.com/18693417/43635937-38478ab8-9743-11e8-8968-785c77b863b1.png)\r\n\r\n- 修改 angular 引入的方式\r\n\r\n```ts\r\n- require(\'angular\');\r\n           👇\r\n+ import * as angular from \'angular\';\r\n```\r\n- 新增警告提示如下：\r\n\r\n![image](https://user-images.githubusercontent.com/18693417/43636207-fc36478e-9743-11e8-9d86-c4c4d75ff37e.png)\r\n- 遇到这些共用库缺少声明文件的情况，可以到[TypeSearch](http://microsoft.github.io/TypeSearch/)搜索下载网上编写好的声明文件，这里我就直接安装了：\r\n\r\n```\r\nnpm i -D  @types/angular\r\n```\r\n- 安装好后，又消灭一个小红线\r\n\r\n![image](https://user-images.githubusercontent.com/18693417/43636375-7a567c74-9744-11e8-9617-c4fa059e1be1.png)\r\n- 再根据红线提醒，根据ts语法，为函数或其他变量添加类型声明，红线全部消灭，舒服！\r\n\r\n```ts\r\n// index.ts\r\n/// <reference path="./index.d.ts" />\r\n\r\nimport * as angular from \'angular\';\r\n\r\nvar myApp = angular.module("init", ["exampleApp.Services", "exampleApp.Directives"]);\r\n\r\nmyApp.constant("startTime", new Date().toLocaleString());\r\nmyApp.config(function (startTime: String) {\r\n    console.log("Main module config: " + startTime);\r\n});\r\nmyApp.run(function (startTime: String) {\r\n    console.log("Main module run: " + startTime);\r\n})\r\n\r\nangular.module("exampleApp.Directives", [])\r\n    .directive("highlight", function ($filter) {\r\n        var dayFilter = $filter("dayName");\r\n        return function (scope: any, element, attrs) {\r\n            if (dayFilter(scope.day) == attrs["highlight"]) {\r\n                element.css("color", "red");\r\n            }\r\n        }\r\n    })\r\n\r\nvar now = new Date();\r\nmyApp.value("nowValue", now);\r\nangular.module("exampleApp.Services", [])\r\n    .service("days", function (this: Day, nowValue: Date) {\r\n        this.today = nowValue.getDay();\r\n        this.tomorrow = this.today + 1;\r\n    })\r\n    .config(function () {\r\n        console.log("Services module config: (no time)");\r\n    })\r\n    .run(function (startTime: string) {\r\n        console.log("Services module run: " + startTime);\r\n    })\r\n```\r\n\r\n```ts\r\n// index.d.ts\r\n/**\r\n * 通过路径导入模块\r\n * @param {string} moduleName\r\n * @returns {*}\r\n */\r\ndeclare function require(moduleName: string): any;\r\n\r\ninterface Day {\r\n    today?: number;\r\n    tomorrow?: number;\r\n}\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/18693417/43637243-0642a260-9747-11e8-96b3-3ab886a54da2.png)\r\n- 最终目录结构：\r\n```\r\n│  .babelrc                               // babel配置文件\r\n│  .gitignore\r\n│  index.d.ts                             // 入口ts文件声明文件\r\n│  index.html                             // 页面文件\r\n│  index.ts                               // 入口ts文件\r\n│  package-lock.json\r\n│  package.json                           // npm init\r\n│  tsconfig.json                          // ts配置文件\r\n│  webpack.config.js                      // webpack 配置文件\r\n│\r\n└─dist                                    // 打包后的目录\r\n        bundle.js\r\n        index.html\r\n```\r\n\r\n# 总结\r\n文章代码比较多，但是十分实用。\r\n\r\nangularjs + webpack4 + typescript 这个组合也十分不常见，这种典型的例子或许说明 typescript 的应用场景可以十分广泛，具体语法大家可以到[官方文档](https://www.tslang.cn/docs/handbook/basic-types.html)好好学习。\r\n\r\n希望这篇文章对入门 Typescript 的同学会有所帮助'},"9f6c":function(n,e,t){"use strict";t.r(e);var r=t("e6bc"),i=t.n(r);for(var a in r)"default"!==a&&function(n){t.d(e,n,(function(){return r[n]}))}(a);e["default"]=i.a},ad30:function(n,e,t){"use strict";var r=t("40a8"),i=t.n(r);i.a},ae18:function(n,e,t){"use strict";t.d(e,"a",(function(){return r})),t.d(e,"b",(function(){return i}));var r=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"generate-svg"},[t("v-card",{staticClass:"overflow-hidden",attrs:{color:"primary lighten-1",dark:""}},[t("v-toolbar",{attrs:{flat:"",color:"primary",dark:""}},[t("v-toolbar-title",{staticClass:"font-weight-light"},[n._v("请输入图片相关信息")]),t("v-spacer"),t("v-icon",[n._v("mdi-pencil")])],1),t("v-card-text",[t("v-text-field",{attrs:{color:"white",label:"第一张图片的地址"},model:{value:n.backgroundUrl,callback:function(e){n.backgroundUrl=e},expression:"backgroundUrl"}}),t("v-text-field",{attrs:{color:"white",label:"第二张图片的地址"},model:{value:n.coverUrl,callback:function(e){n.coverUrl=e},expression:"coverUrl"}}),t("v-text-field",{attrs:{color:"white",label:"背景图的地址"},model:{value:n.decorateUrl,callback:function(e){n.decorateUrl=e},expression:"decorateUrl"}}),t("v-text-field",{attrs:{color:"white",label:"宽度"},model:{value:n.width,callback:function(e){n.width=e},expression:"width"}}),t("v-text-field",{attrs:{color:"white",label:"高度"},model:{value:n.height,callback:function(e){n.height=e},expression:"height"}})],1),t("v-divider"),t("v-card-actions",[t("v-spacer"),t("v-btn",{attrs:{name:"btn",outlined:"","data-clipboard-text":n.clipboardText}},[n._v(" 生成可点击图片 ")]),t("v-btn",{attrs:{name:"btn",outlined:"","data-clipboard-text":n.scrollPicClipboardText}},[n._v(" 生成可滚动图片 ")])],1),t("v-snackbar",{attrs:{timeout:2e3,absolute:"",bottom:"",left:""},model:{value:n.hasSussess,callback:function(e){n.hasSussess=e},expression:"hasSussess"}},[n._v(" 复制成功 ")])],1)],1)},i=[]},b20b:function(n,e){n.exports='### 富文本编辑器这个东西，其实应用场景挺多的；产品说，这里文案没事我就要改一改，我还要一个五彩斑斓的黑色，好吧，我们写一个富文本编辑器给TA吧。\r\n> 富文本编辑器有很多种，包括用textarea写markdown语法、开启contentEditable的div模式以及开启designModed的iframe模式。这里我主要介绍一下iframe的富文本编辑器，个人认为这是拓展性最强的（坑也是最多的）。\r\n- ### 初始化（这里就不多提了，也就是写一个的Iframe标签，确保能通过js拿到就行了）\r\n>index.html\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang="en">\r\n\r\n<head>\r\n    <meta charset="UTF-8">\r\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\r\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\r\n    <title>Document</title>\r\n</head>\r\n\r\n<body>\r\n    <iframe frameBorder=0 id="iframe"></iframe>\r\n</body>\r\n<script src="./index.js"><\/script>\r\n</html>\r\n```\r\n> index.js\r\n\r\n```js\r\nconst iframe = document.querySelector(\'#iframe\').contentWindow.document; // 获取iframe中的document\r\niframe.designMode = "on"; // 开启设计模式\r\n```\r\n此时，页面中的 Iframe 已经处于**可编辑状态**。\r\n- ### 来点默认提示语(Placeholder)\r\n- 先来点样式(当然是写在iframe的头部啦)\r\n\r\n```js\r\niframe.open();\r\niframe.writeln(\r\n    `<style>\r\n        ::-webkit-scrollbar {\r\n            display: none;\r\n        }\r\n        *{\r\n            margin:0;\r\n            padding:0\r\n        }\r\n        body,html\r\n            {font-size:4vw;width:100%;height:100%;box-sizing: border-box;color: #333;font-family:PingFangSC-Regular, sans-serif;}\r\n        body\r\n            {padding:4vw 3.33vw;line-height: 1.5;word-break:break-all;}\r\n    </style>`\r\n);\r\niframe.close();\r\n```\r\n- 写几个字\r\n\r\n```js\r\n iframe.body.innerHTML = `<p style="color:#b2b2b2;line-height:1;">动动手指头，写个黑板报~</p>`;\r\n```\r\n- 此时iframe是这样子的：\r\n\r\n![iframe](https://user-images.githubusercontent.com/18693417/43066469-506ae2f2-8e97-11e8-97dc-9710b9fe43e6.png)\r\n\r\n- html结构是这样子的：\r\n\r\n![iframe0](https://user-images.githubusercontent.com/18693417/43066646-ca496738-8e97-11e8-9437-0b397377c7e7.png)\r\n\r\n> 这里提一个点，如果需要说当用户点击时，默认提示语消失等操作，直接对iframe的Document进行相关事件监听处理一下就可以了,粘贴动作如下：\r\n\r\n```js\r\niframe.addEventListener("paste", function (e) {\r\n    var text = null;\r\n    text = (e.originalEvent || e).clipboardData.getData(\'text/plain\');\r\n    iframe.execCommand("insertText", false, text);\r\n    e.preventDefault();\r\n}, false);\r\n```\r\n- ### 添加图片\r\n\r\n```html\r\n\x3c!-- 添加一个input标签 --\x3e\r\n<form method="POST" encType="multipart/form-data" id="form">\r\n    <input type="file" name="img" accept="image/*" multiple="true">\r\n</form>\r\n```\r\n> 为form添加一个onChange事件\r\n\r\n```js\r\nconst form = document.querySelector(\'#form\');\r\nform.addEventListener(\'change\', function(e) => {\r\n    // 这里处理图片文件\r\n})\r\n```\r\n> 在onChange事件中添加逻辑处理\r\n\r\n```js\r\nconst staticContent = iframe.body.innerHTML; // 1. 获取到富文本编辑器中的内容\r\n\r\nconst imgQty = staticContent.match( // 2. 通过img标签判断当前富文本编辑器中存在的图片数量\r\n        /<img(.*?)>/\r\n    ) ?\r\n    staticContent.match(\r\n        /<img(.*?)>/g\r\n    ).length :\r\n    0;\r\n\r\nconst files = e.target.files; // 3. 获取待上传图片\r\n\r\nthis.prototype = { // 4. 初始化一些相关功能\r\n    readAndDoSth: file => { // 4.1. 读取文件\r\n        // 确保 `file.name` 符合我们要求的扩展名\r\n        if (!/\\.(jpe?g|png|gif)$/i.test(file.name)) {\r\n            alert("非法文件");\r\n            return;\r\n        }\r\n        //判断图片大小\r\n        const maxSize = 200 * 1024; //200K 这里可以自由发挥，可以根据文件大小决定是否压缩、读取图片后旋转等操作，我这里就不演示Canvas的相关操作了\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        const self = this;\r\n        reader.onload = function () {\r\n            // self.prototype.img2formdata(this.result, file.type, file.name); // 这里可以进行图片上传后再插入图片，逻辑与本地插入大概一致，这里我演示一下如何生成form表单\r\n            self.prototype.insertImg(this.result) // 本地插入\r\n        };\r\n    },\r\n    img2formdata: (basestr, type, name) => { // 4.2. 把图片转成FormData\r\n        let text = window.atob(basestr.split(",")[1]);\r\n        let buffer = new ArrayBuffer(text.length);\r\n        let ubuffer = new Uint8Array(buffer);\r\n\r\n        for (let i = 0; i < text.length; i++) {\r\n            ubuffer[i] = text.charCodeAt(i);\r\n        }\r\n\r\n        let Builder = window.WebKitBlobBuilder || window.MozBlobBuilder;\r\n        let blob;\r\n\r\n        if (Builder) {\r\n            let builder = new Builder();\r\n            builder.append(buffer);\r\n            blob = builder.getBlob(type);\r\n        } else {\r\n            blob = new window.Blob([buffer], {\r\n                type: type\r\n            });\r\n        }\r\n        let formdata = new FormData();\r\n        formdata.append("img", blob, name);\r\n        this.prototype.upload(formdata); // 上传Formdata\r\n    },\r\n    upload: formdata => { // 4.3. 上传到服务端\r\n        // 在这里可以把图片上传给服务端，换取服务端缓存地址，然后再插入具体路径的img标签，具体就不继续演示了。\r\n    },\r\n    insertImg: url => { //  4.4. 根据url插入图片\r\n        const image = new Image();\r\n        image.src = url;\r\n        const outerDiv = document.createElement("div");\r\n        outerDiv.appendChild(image);\r\n        try { // 获取当前焦点位置\r\n            iframe.getSelection().getRangeAt(0);\r\n            iframe.body.focus();\r\n            iframe.execCommand("insertHTML", false, outerDiv.innerHTML);\r\n        } catch (err) { // 无法获取焦点位置直接在文末插入\r\n            iframe.body.innerHTML += outerDiv.innerHTML\r\n        }\r\n    }\r\n}\r\n\r\n// 5. 初始完所有需要用到的变量后，开始执行读取文件（对单个文件进行处理）\r\nif (files.length < 10 - imgQty && files.length > 0) { // 控制可上传图片数量\r\n    [].forEach.call(files, this.prototype.readAndDoSth);\r\n    e.target.value = ""; // 清空form表单\r\n} else {\r\n    alert("只能上传9张图片");\r\n}\r\n```\r\n![iframe1](https://user-images.githubusercontent.com/18693417/43117312-b5c1272c-8f3e-11e8-8056-26cabee503b8.png)\r\n- 以上就是插入图片的代码了，代码之间的耦合性比较高，后面有空我再解一下耦。（具体代码请参考目录中的index.js文件）\r\n- 当然，以上代码可能在兼容性存在一定的问题，但也能适配较多的平台了，有相关疑问或是技术难题欢迎在下方评论区提出来，谢谢！\r\n> 我就不写样式，怎么D~'},b636:function(n,e,t){"use strict";t("cb29");var r=t("9523"),i=t("970b"),a=t("5bc3"),o=t("6b58"),s=t("36c6"),l=t("ed6d");Object.defineProperty(e,"__esModule",{value:!0});var c=t("9ab4"),u=t("60a3"),d=c.__importDefault(t("cd7d")),f=c.__importDefault(t("e979")),p=function(n){function e(){var n;return i(this,e),n=o(this,s(e).apply(this,arguments)),n.isPass=!1,n.isSubmitBtnPressing=!1,n.topicList=f.default,n.answerList=new Array(f.default.length),n.errorList=new Array(f.default.length).fill({}),n}return l(e,n),a(e,[{key:"topicHandler",value:function(n){var e=this;return function(t){e.$set(e.answerList,n,t)}}},{key:"submitAndCheck",value:function(){for(var n=!0,e=0;e<this.answerList.length;e++)if(void 0===this.answerList[e])return void alert("第".concat(e+1,"题还未填写"));for(var t=0;t<this.answerList.length;t++){var i=this.answerList[t]!==f.default[t].answer;i&&(n=!1),i||(this.isPass=!0),this.$set(this.errorList,t,r({},this.answerList[t],i))}this.isPass=n}},{key:"submitBtnPressUp",value:function(){this.isSubmitBtnPressing=!1}},{key:"mounted",value:function(){document.addEventListener("mouseup",this.submitBtnPressUp)}},{key:"destroy",value:function(){document.removeEventListener("mouseup",this.submitBtnPressUp)}}]),e}(u.Vue);p=c.__decorate([u.Component({components:{Topic:d.default}})],p),e.default=p},b861:function(n,e,t){"use strict";t("99af");var r=t("448a");Object.defineProperty(e,"__esModule",{value:!0});var i=t("9ab4"),a=i.__importDefault(t("2b0e")),o=i.__importDefault(t("4ad6"));e.default=a.default.extend({data:function(){return{drawer:!0,dialog:!1,items:[{icon:"mdi-contacts",text:"Home",to:"/"},{icon:"mdi-history",text:"What Will I Eat",to:"/what-will-i-eat/index"},{icon:"mdi-content-copy",text:"Generate SVG",to:"/generate-svg/index"}].concat(r(o.default))}}})},bb3e:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=t("9483");r.register("".concat("/Jason.github.io/","service-worker.js"),{ready:function(){console.log("App is being served from cache by a service worker.\nFor more details, visit https://goo.gl/AFskqB")},registered:function(){console.log("Service worker has been registered.")},cached:function(){console.log("Content has been cached for offline use.")},updatefound:function(){console.log("New content is downloading.")},updated:function(){console.log("New content is available; please refresh.")},offline:function(){console.log("No internet connection found. App is running in offline mode.")},error:function(n){console.error("Error during service worker registration:",n)}})},bb51:function(n,e,t){"use strict";t.r(e);var r=t("88e1"),i=t("3d48");for(var a in i)"default"!==a&&function(n){t.d(e,n,(function(){return i[n]}))}(a);t("0f82");var o=t("2877"),s=Object(o["a"])(i["default"],r["a"],r["b"],!1,null,"4bb94640",null);e["default"]=s.exports},c45f:function(n,e,t){"use strict";t.r(e);var r=t("b861"),i=t.n(r);for(var a in r)"default"!==a&&function(n){t.d(e,n,(function(){return r[n]}))}(a);e["default"]=i.a},c49c:function(n,e){n.exports="### 上个星期，甲方说要在应用上做一个促活活动（其实就是让用户领OFO的骑车券），考虑到之前在我另一个应用上已经做过客户端token验证，想想，撸起袖子直接在之前的Node上开搞吧。\r\n\r\n- ### Nuxt\r\n 这个东西类似与React中的Next，做Vue服务端渲染在Nuxt确实挺方便的，整个目录结构与Vue-Cli也差不多，但我觉得更清晰明了，而且有很丰富的配置，包括我最喜欢的顶部Loadding条啊、Layer主题模板啊、服务端渲染有益于SEO啊、自动生成Router啊等等等等。这里我就不详细展开了，选择他主要是用习惯了，而且性能也很不错。\r\n\r\n- ### Express\r\n它就是一个Koa、egg等的一个服务端的工具，封装很多便捷的方法。这里也不详细展开。\r\n\r\n### 第一步 完成静态页面\r\n+ 在这里就不详细说明HTML怎么构建、Vue使用方法等等等不相关的问题，首先页面效果如下图：\r\n\r\n![default](https://user-images.githubusercontent.com/18693417/42724526-71f0ddde-87a6-11e8-94c7-4428932f7a37.png)\r\n\r\n+ 点击确认领取后，向后端发送请求，获取券码：\r\n\r\n![1](https://user-images.githubusercontent.com/18693417/42724542-d96e0de2-87a6-11e8-9f4e-cb05455035f5.png)\r\n\r\n+ 大致业务流程就是这样子了。\r\n\r\n### 第二步 基于webview完成token验证\r\n+ 甲方公司的token是怎么给到用户的呢？\r\n    - 用户登录客服端\r\n    - 用户在webview访问相应的地址\r\n    - 客户端把token等信息绑定在地址上让服务端接受，并向服务端发送GET请求\r\n    - 服务端接受到Token后，根据Token信息验证用户身份并返回页面给用户\r\n+ 所以也就是相当于，此时我手上的Node需要完成一个Token验证的需求，开搞：\r\n\r\n> 这里必须说一下Session这个东西，一开始当我完成了Token验证的时候，可是发现两个用户同时访问的时候，后访问者会重新执行一次对应请求里的方法，相当于很多数据都初始化甚至重新赋值。完全不知道怎么把用户分开，问了一下JAVA的同学，他们说框架自带会分开，这就让我很忧郁了。其实，他们也知道Session这个东西，只是一直这样用后习惯了也就突然说不清楚甚至想到它的存在了。\r\n我一开始想到的是用Cookie验证对应浏览器，但总觉得这种方法有点古老，不够高大上（个人主观看法，勿喷），储存量也很有限。所以又探索了一天，得知有个Session这个东西可以验证对应浏览器（好吧，其实也就是把Cookie当成数据索引）。知道了有这么一回事之后也就茅塞顿开了。\r\n\r\n```js\r\n// 引入一些工具\r\nconst http = require('http')\r\nconst express = require(\"express\");\r\nconst session = require('express-session');\r\n\r\nconst nuxtapp = express(); // 创建一个express应用\r\n\r\n// 设置SESSION配置\r\nnuxtapp.use(session({\r\n  secret: 'key' // 建议使用 128 个字符的随机字符串 \r\n}));\r\n\r\n// 处理OPTIONS请求（axios发送POST请求时会先发送一个OPTION请求验证服务器的连通情况）\r\nnuxtapp.use(function (req, res, next) {\r\n  if ('OPTIONS' === req.method) {\r\n    res.sendStatus(200);\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\n// 写一个验证Token的接口\r\nnuxtapp.get('/getphone', (req, res) => {\r\n    if (!req.query.token) {\r\n      //  if else ...\r\n      res.sendStatus(200)\r\n      return;\r\n    }\r\n    // 这里创建请求只是举一个例子，有的Token可以本地解析，有的需要服务端向另一个服务端请求解析。（参考微信）\r\n    const request = http.request({\r\n      host: \"api.example.com\",\r\n      headers: {\r\n        'Content-Type': ' application/json',\r\n        'Accept-Encoding': 'utf-8', //这里设置返回的编码方式 设置其他的会是乱码\r\n        'Accept-Language': 'zh-CN,zh;q=0.8',\r\n        'Connection': 'keep-alive',\r\n      },\r\n      path: '/getTokenorSth',\r\n      port: 'port',\r\n      method: 'POST'\r\n    }, response => {\r\n      let data = \"\"; // 创建变量记录数据\r\n      response.on(\"data\", function (chunk) {\r\n        data += chunk\r\n      })\r\n      response.on(\"end\", function () { // 设置seesion\r\n        try {\r\n          if (!req.session.id) {\r\n            // set session like : req.session.id= JSON.parse(data)\r\n          }\r\n          res.sendStatus(200)\r\n        } catch (err) {\r\n          console.log(err);\r\n          res.sendStatus(500)\r\n        }\r\n      })\r\n    }).on('error', (e) => {\r\n      console.log(`错误信息: ${e.message}`);\r\n      res.sendStatus(500)\r\n    });\r\n    // POST Data\r\n    request.write(JSON.stringify({\r\n        example:example,\r\n        token: req.query.token\r\n    })); // 用户传过来的数据 post\r\n    request.end();\r\n})\r\n\r\nnuxtapp.listen(port || 80, '0.0.0.0')\r\nconsole.log(\"已开启服务器，请访问 —— localhost:\" + port || 80)\r\n```\r\n\r\n### 第三步 服务端代理（这里我也有个点不是很确定，所谓淘宝Node+JAVA是不是就是这种模式）\r\n> 毕竟我还是个前端，功能方面的实现还是交给资深大JAVA吧（若是给我时间，我还真的想写一下SQL复习一下）\r\n+ 用户访问的时候还是向Node请求，这里需要提一点的就是，假如后端提供了很多接口，你不一定每个都要写一个app.get(‘/api’)或者什么，express的文档上有提到类似这种写法：\r\n\r\n```js\r\nnuxtapp.all([\"/api1/*\",\"/api2/*\"], requestFunction)\r\n```\r\n其他就跟上面token验证差不多了\r\n\r\n### 第四步 用Express执行Nuxt\r\n+ 在Nuxt官网上其实也有部分代码教你如何用自己写的Node去运行，但一直不是很完善，有点差强人意。我在这里就补充一下我的理解，**哪里写得不对，请尽管喷，谢谢喷我的每一个人**。\r\n\r\n```js\r\n// nuxt\r\nconst {\r\n  Nuxt,\r\n  Builder\r\n} = require('nuxt') // 引入核心构建属性\r\n\r\n// 判断开发环境\r\nconst isProd = (process.env.NODE_ENV === 'production')\r\nconst port = process.env.PORT || 80\r\n\r\n// 引入nuxt配置\r\nconst config = require('./nuxt.config.js')\r\nconfig.dev = !isProd;\r\nconst nuxt = new Nuxt(config);\r\n\r\n// 判断生产模式 dev(开发者模式)表示重新构建 ；pro(生产模式)表示直接从yanr build的文件直接执行\r\nif (config.dev) {\r\n  new Builder(nuxt).build()\r\n    .then(listen)\r\n    .catch((error) => {\r\n      console.error(error)\r\n      process.exit(1)\r\n    })\r\n} else {\r\n  listen()\r\n}\r\n```\r\n以上的listen就是我在第二、三步写的相应接口的express服务器啦。\r\n+ 那么nuxt其实还并没有在代码中执行，new Nuxt一个Nuxt实例后返回一个nuxt方法，它其实是根据request,response去执行相应的渲染，其中我们要考虑到express()的各种接口的执行顺序，假如一开始就匹配到了第二步的代码的get请求，那么写在第二步代码后的all方法中的各种接口是接收不到的。\r\n+ 我考虑到的是接口不是无缘无故执行的，但用户请求是必然发生的。那么也就是当用户除了故意发送请求，全部由Nuxt接手。所以Nuxt会是放在最后让其渲染页面并交给用户，为了方便验证Token，我把验证Token的请求放在首页让浏览器捕获Token以及相应信息后交给Node执行手动登陆。（其实也可以通过在nuxt渲染前判断是否存在Token来决定是否进行token验证，我就不在这里再进行大量代码的展示了）\r\n+ 结合以上思路，也就是在最后捕获所有GET请求并交手给Nuxt即可：\r\n\r\n```js\r\n// 最后捕获nuxt渲染\r\nnuxtapp.get('/*', (req, res) => {\r\n  nuxt.render(req, res)\r\n})\r\n```\r\n\r\n"},c522:function(n,e,t){"use strict";t("99af"),Object.defineProperty(e,"__esModule",{value:!0});var r=t("9ab4"),i=r.__importDefault(t("2b0e")),a=t("e1e9"),o=t("4a5b");e.default=i.default.extend({data:function(){return{VegetarianDishList:a.VegetarianDishList,ChivesList:a.ChivesList,CookMethodsList:a.CookMethodsList,result:""}},methods:{getResult:function(){var n=o.randomNumber(0,this.VegetarianDishList.length-1),e=o.randomNumber(0,this.ChivesList.length-1),t=o.randomNumber(0,this.CookMethodsList.length-1);this.result="\n        ".concat(this.VegetarianDishList[n],"\n        ").concat(this.CookMethodsList[t],"\n        ").concat(this.ChivesList[e],"\n      ")}}})},cd49:function(n,e,t){"use strict";t("e260"),t("e6cf"),t("cca6"),t("a79d"),Object.defineProperty(e,"__esModule",{value:!0});var r=t("9ab4"),i=r.__importDefault(t("2b0e")),a=r.__importDefault(t("3dfd")),o=r.__importDefault(t("5f86")),s=r.__importDefault(t("3a0b"));t("bb3e");var l=r.__importDefault(t("0670"));i.default.config.productionTip=!1,new i.default({router:o.default,store:s.default,vuetify:l.default,render:function(n){return n(a.default)}}).$mount("#app")},cd7d:function(n,e,t){"use strict";t.r(e);var r=t("6b61"),i=t("f7e5");for(var a in i)"default"!==a&&function(n){t.d(e,n,(function(){return i[n]}))}(a);t("6836");var o=t("2877"),s=Object(o["a"])(i["default"],r["a"],r["b"],!1,null,"484c4e3e",null);e["default"]=s.exports},d47e:function(n,e,t){"use strict";var r;Object.defineProperty(e,"__esModule",{value:!0}),function(n){n[n["A"]=0]="A",n[n["B"]=1]="B",n[n["C"]=2]="C",n[n["D"]=3]="D"}(r=e.optionsSymbol||(e.optionsSymbol={})),e.default={optionsSymbol:r}},e1e9:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.VegetarianDishList=["素菜测试1","素菜测试2","素菜测试3","素菜测试4"],e.ChivesList=["荤菜测试1","荤菜测试2","荤菜测试3","荤菜测试4"],e.CookMethodsList=["蒸","炒","灼"]},e6bc:function(n,e,t){"use strict";t("99af"),t("b680"),t("ac1f"),t("1276"),Object.defineProperty(e,"__esModule",{value:!0});var r=t("9ab4"),i=r.__importDefault(t("2b0e")),a=r.__importDefault(t("b311"));e.default=i.default.extend({data:function(){return{coverUrl:"",backgroundUrl:"",decorateUrl:"",height:0,width:0,clipboard:null,hasSussess:!1}},computed:{clipboardText:function(){var n=(this.height/this.width*100).toFixed(2),e=this.backgroundUrl.split("?")[0],t=this.coverUrl.split("?")[0];return'<p><br></p>\n<p style="max-height: 0;min-height: 0;overflow: hidden;">\n  <img class="rich_pages" data-ratio="1.16640625" data-s="300,640" src="'.concat(e,'" data-type="jpeg" data-w="1280" style="display:block;height:0 !important" _src="').concat(e,'">\n</p>\n<p style="max-height: 0;min-height: 0;overflow: hidden;">\n  <img class="rich_pages" data-ratio="1.16640625" data-s="300,640" src="').concat(t,'" data-type="jpeg" data-w="1280" style="display:block;height:0 !important" _src="').concat(t,'">\n</p>\n<section style="text-align: justify;display: inline-block;">\n  <section style="display: inline-block;vertical-align: middle;line-height: 0;box-sizing: border-box;width: ').concat(this.width,'px;">\n    <section style="background-image: url(&quot;').concat(e,"&quot;);background-position: 50% 50%;background-repeat: no-repeat;background-size: cover;background-attachment: scroll;width: 100%;margin-left: auto;margin-right: auto;box-sizing: border-box;height: 0;padding-bottom: ").concat(n,'%;">\n    </section>\n    <section style="box-sizing: border-box;margin-top: -').concat(n,"%;height: 0;padding-bottom:  ").concat(n,'%;">\n      <svg style="background-image: url(&quot;').concat(t,"&quot;);background-position: 50% 50%;background-repeat: no-repeat;background-size: cover;background-attachment: scroll;width: 100%;margin-left: auto;margin-right: auto;box-sizing: border-box;height: 0;padding-bottom:").concat(n,'%;" xmlns="http://www.w3.org/2000/svg" width="1">\n        <animate attributeName="width" style="box-sizing: border-box;" fill="freeze" to="0" from="1" duration="0.01" begin="click + 0.01s">\n        </animate>\n        <animate attributeName="opacity" style="box-sizing: border-box;" fill="freeze" dur="0.01" begin="click" from="1" to="0">\n        </animate>\n      </svg>\n    </section>\n  </section>\n</section>\n<p><br></p>')},scrollPicClipboardText:function(){var n=this.backgroundUrl.split("?")[0],e=this.coverUrl.split("?")[0],t=this.decorateUrl.split("?")[0];return'<p><br></p>\n<section style="width: 100%;border-width: initial;border-color: initial;border-style: none;overflow: hidden;"\n    donone="shifuMouseDownPayStyle(\'shifu_gqixi_012\')">\n    <section\n        style="background-image: url(&quot;'.concat(t,'&quot;);background-position: 50% 50%;background-repeat: no-repeat;background-size: cover;background-attachment: scroll;width: 100%;margin-left: auto;margin-right: auto;">\n        <section\n            style="display: inline-block;width: 100%;vertical-align: top;overflow: auto;-webkit-overflow-scrolling: touch;">\n            <section\n                style="display: flex;justify-content: flex-start;align-items: flex-start;width: 200%;min-width: 100%;max-width: 200% !important;">\n                <section style="display: inline-block; width: 50%; vertical-align: top;"><img\n                        src="').concat(n,'"\n                        style="width: 100%;visibility: visible;vertical-align: bottom;float: left;" data-type="png"\n                        data-ratio="1.4446177847113884" data-w="641"></section>\n                <section style="display: inline-block; width: 50%; vertical-align: top;"><img\n                        src="').concat(e,'"\n                        style="width: 100%;visibility: visible;vertical-align: bottom;" data-type="png"\n                        data-ratio="1.4446177847113884" data-w="641">​</section>\n            </section>\n        </section>\n    </section>\n</section>\n<p><br></p>')}},methods:{initClipboard:function(){this.clipboard=new a.default('[name="btn"]'),this.clipboard.on.call(this.clipboard,"success",(function(n){alert("复制成功"),n.clearSelection()}))}},mounted:function(){this.initClipboard()},beforeDestroy:function(){this.clipboard.destroy.call(this.clipboard)}})},e72f:function(n,e,t){"use strict";t.r(e);var r=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("router-view")},i=[],a=t("2877"),o={},s=Object(a["a"])(o,r,i,!1,null,null,null);e["default"]=s.exports},e979:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=[{title:'["1", "2", "3"].map(parseInt)',id:1,answer:14,options:[{id:11,name:'["1", "2", "3"]'},{id:12,name:"[1, 2, 3]"},{id:13,name:"[0, 1, 2]"},{id:14,name:"other"}]},{title:"[typeof null, null instanceof Object]",id:2,answer:21,options:[{id:21,name:'["object", false]'},{id:22,name:"[null, false]"},{id:23,name:'["object", true]'},{id:24,name:"other"}]},{title:"[[3,2,1].reduce(Math.pow), [].reduce(Math.pow)]",id:3,answer:31,options:[{id:31,name:"an error"},{id:32,name:"[9, 0]"},{id:33,name:"[9, NaN]"},{id:34,name:"[9, undefined]"}]},{title:"",code:"var val = 'smtg';\nconsole.log('Value is ' + (val === 'smtg') ? 'Something' : 'Nothing');",id:4,answer:41,options:[{id:41,name:'["object", false]'},{id:42,name:"[null, false]"},{id:43,name:'["object", true]'},{id:44,name:"other"}]},{title:"[typeof null, null instanceof Object]",id:2,answer:21,options:[{id:21,name:'["object", false]'},{id:22,name:"[null, false]"},{id:23,name:'["object", true]'},{id:24,name:"other"}]},{title:"[typeof null, null instanceof Object]",id:2,answer:21,options:[{id:21,name:'["object", false]'},{id:22,name:"[null, false]"},{id:23,name:'["object", true]'},{id:24,name:"other"}]},{title:"[typeof null, null instanceof Object]",id:2,answer:21,options:[{id:21,name:'["object", false]'},{id:22,name:"[null, false]"},{id:23,name:'["object", true]'},{id:24,name:"other"}]},{title:"[typeof null, null instanceof Object]",id:2,answer:21,options:[{id:21,name:'["object", false]'},{id:22,name:"[null, false]"},{id:23,name:'["object", true]'},{id:24,name:"other"}]},{title:"[typeof null, null instanceof Object]",id:2,answer:21,options:[{id:21,name:'["object", false]'},{id:22,name:"[null, false]"},{id:23,name:'["object", true]'},{id:24,name:"other"}]},{title:"[typeof null, null instanceof Object]",id:2,answer:21,options:[{id:21,name:'["object", false]'},{id:22,name:"[null, false]"},{id:23,name:'["object", true]'},{id:24,name:"other"}]}];e.default=r},f7e5:function(n,e,t){"use strict";t.r(e);var r=t("2af6"),i=t.n(r);for(var a in r)"default"!==a&&function(n){t.d(e,n,(function(){return r[n]}))}(a);e["default"]=i.a}});
//# sourceMappingURL=app.e82c99ad.js.map