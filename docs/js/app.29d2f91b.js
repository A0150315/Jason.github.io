(function(e){function n(n){for(var r,a,s=n[0],l=n[1],u=n[2],d=0,f=[];d<s.length;d++)a=s[d],Object.prototype.hasOwnProperty.call(i,a)&&i[a]&&f.push(i[a][0]),i[a]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r]);c&&c(n);while(f.length)f.shift()();return o.push.apply(o,u||[]),t()}function t(){for(var e,n=0;n<o.length;n++){for(var t=o[n],r=!0,s=1;s<t.length;s++){var l=t[s];0!==i[l]&&(r=!1)}r&&(o.splice(n--,1),e=a(a.s=t[0]))}return e}var r={},i={app:0},o=[];function a(n){if(r[n])return r[n].exports;var t=r[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.m=e,a.c=r,a.d=function(e,n,t){a.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},a.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,n){if(1&n&&(e=a(e)),8&n)return e;if(4&n&&"object"===typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)a.d(t,r,function(n){return e[n]}.bind(null,r));return t},a.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(n,"a",n),n},a.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},a.p="/Jason.github.io/";var s=window["webpackJsonp"]=window["webpackJsonp"]||[],l=s.push.bind(s);s.push=n,s=s.slice();for(var u=0;u<s.length;u++)n(s[u]);var c=l;o.push([0,"chunk-vendors"]),t()})({0:function(e,n,t){e.exports=t("cd49")},"0670":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("9ab4"),i=r.__importDefault(t("2b0e")),o=r.__importDefault(t("bb71"));i.default.use(o.default),n.default=new o.default({theme:{themes:{light:{primary:"#2E7D32",secondary:"#4CAF50"}}}})},"07de":function(e,n,t){},"094d":function(e,n,t){"use strict";t.r(n);var r=t("3e70"),i=t.n(r);for(var o in r)"default"!==o&&function(e){t.d(n,e,(function(){return r[e]}))}(o);n["default"]=i.a},"0f82":function(e,n,t){"use strict";var r=t("9ab0"),i=t.n(r);i.a},1755:function(e,n,t){},"299d":function(e,n,t){"use strict";var r=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"what-will-i-eat"},[t("h1",[e._v("素菜")]),t("ul",e._l(e.VegetarianDishList,(function(n,r){return t("li",{key:r},[e._v(" "+e._s(n)+" ")])})),0),t("h1",[e._v("荤菜")]),t("ul",e._l(e.ChivesList,(function(n,r){return t("li",{key:r},[e._v(" "+e._s(n)+" ")])})),0),t("h1",[e._v("烹饪方式")]),t("ul",e._l(e.CookMethodsList,(function(n,r){return t("li",{key:r},[e._v(" "+e._s(n)+" ")])})),0),t("button",{on:{click:e.getResult}},[e._v(" 来吧 ")]),t("p",[e._v(" "+e._s(e.result)+" ")])])},i=[];t.d(n,"a",(function(){return r})),t.d(n,"b",(function(){return i}))},"2af6":function(e,n,t){"use strict";var r=t("970b"),i=t("5bc3"),o=t("6b58"),a=t("36c6"),s=t("ed6d");Object.defineProperty(n,"__esModule",{value:!0});var l=t("9ab4"),u=t("60a3"),c=t("d47e"),d=function(e){function n(){var e;return r(this,n),e=o(this,a(n).apply(this,arguments)),e.optionsSymbol=c.optionsSymbol,e.selectedOpitonsID=-1,e}return s(n,e),i(n,[{key:"optionsHandler",value:function(e){this.selectedOpitonsID=e,this.onChange(e)}}]),n}(u.Vue);l.__decorate([u.Prop({default:"0"})],d.prototype,"serialNumber",void 0),l.__decorate([u.Prop({default:{"-1":!1}})],d.prototype,"errorMap",void 0),l.__decorate([u.Prop({default:function(){}})],d.prototype,"onChange",void 0),l.__decorate([u.Prop({default:function(){return{title:"标题",id:0,options:[{id:1,name:"选项1"},{id:2,name:"选项2"},{id:3,name:"选项3"},{id:4,name:"选项4"}]}}})],d.prototype,"data",void 0),d=l.__decorate([u.Component],d),n.default=d},"2b20":function(e,n,t){"use strict";var r=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"what-will-i-eat",domProps:{innerHTML:e._s(e.html)}})},i=[];t.d(n,"a",(function(){return r})),t.d(n,"b",(function(){return i}))},3197:function(e,n,t){"use strict";var r=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("v-app",[t("v-navigation-drawer",{attrs:{clipped:e.$vuetify.breakpoint.lgAndUp,app:""},model:{value:e.drawer,callback:function(n){e.drawer=n},expression:"drawer"}},[t("v-list",{attrs:{dense:""}},[e._l(e.items,(function(n,r){return[n.heading?t("v-row",{key:n.heading,attrs:{align:"center"}},[t("v-col",{attrs:{cols:"6"}},[n.heading?t("v-subheader",[e._v(" "+e._s(n.heading)+" ")]):e._e()],1),t("v-col",{staticClass:"text-center",attrs:{cols:"6"}},[t("v-icon",[e._v("mdi-alert-circle-outline")]),t("span",{staticClass:"body-2 black--text"},[e._v(" BUILDING...")])],1)],1):n.divider?t("v-divider",{key:r,staticClass:"my-4",attrs:{dark:""}}):n.children?t("v-list-group",{key:n.text,attrs:{"prepend-icon":n.model?n.icon:n["icon-alt"],"append-icon":""},scopedSlots:e._u([{key:"activator",fn:function(){return[t("v-list-item-content",[t("v-list-item-title",[e._v(" "+e._s(n.text)+" ")])],1)]},proxy:!0}],null,!0),model:{value:n.model,callback:function(t){e.$set(n,"model",t)},expression:"item.model"}},e._l(n.children,(function(n,r){return t("v-list-item",{key:r,attrs:{link:""}},[n.icon?t("v-list-item-action",[t("v-icon",[e._v(e._s(n.icon))])],1):e._e(),t("v-list-item-content",[t("v-list-item-title",[e._v(" "+e._s(n.text)+" ")])],1)],1)})),1):t("v-list-item",{key:n.text,attrs:{to:n.to,replace:""}},[t("v-list-item-action",[t("v-icon",[e._v(e._s(n.icon))])],1),t("v-list-item-content",[t("v-list-item-title",[e._v(" "+e._s(n.text)+" ")])],1)],1)]}))],2)],1),t("v-app-bar",{attrs:{"clipped-left":e.$vuetify.breakpoint.lgAndUp,app:"",color:"green darken-3",dark:""}},[t("v-app-bar-nav-icon",{on:{click:function(n){n.stopPropagation(),e.drawer=!e.drawer}}}),t("v-toolbar-title",{staticClass:"ml-0 pl-4",staticStyle:{width:"300px"}},[t("span",{staticClass:"hidden-sm-and-down"},[e._v("This is Cupertino UI")])]),t("v-text-field",{staticClass:"hidden-sm-and-down",attrs:{flat:"","solo-inverted":"","hide-details":"","prepend-inner-icon":"mdi-magnify",label:"Search"}}),t("v-spacer"),t("v-btn",{attrs:{icon:""}},[t("v-icon",[e._v("mdi-bell")])],1),t("v-tooltip",{attrs:{bottom:""},scopedSlots:e._u([{key:"activator",fn:function(n){var r=n.on;return[t("v-btn",e._g({attrs:{href:"https://github.com/A0150315",icon:"",large:"",target:"_blank"}},r),[t("v-avatar",{attrs:{size:"32px",item:""}},[t("v-img",{attrs:{src:"https://avatars3.githubusercontent.com/u/18693417?s=40&v=4",alt:"avatars"}})],1)],1)]}}])},[t("span",[e._v("My Github")])])],1),t("v-content",[t("v-container",{attrs:{fluid:""}},[t("v-row",[e._t("default")],2)],1),t("v-btn",{attrs:{bottom:"",color:"red",dark:"",fab:"",fixed:"",right:""},on:{click:function(n){e.dialog=!e.dialog}}},[t("v-icon",[e._v("mdi-plus")])],1)],1)],1)},i=[];t.d(n,"a",(function(){return r})),t.d(n,"b",(function(){return i}))},"325a":function(e,n,t){"use strict";t.r(n);var r=t("cc123"),i=t("9f6c");for(var o in i)"default"!==o&&function(e){t.d(n,e,(function(){return i[e]}))}(o);var a=t("2877"),s=Object(a["a"])(i["default"],r["a"],r["b"],!1,null,null,null);n["default"]=s.exports},3408:function(e,n,t){"use strict";t.r(n);var r=t("c522"),i=t.n(r);for(var o in r)"default"!==o&&function(e){t.d(n,e,(function(){return r[e]}))}(o);n["default"]=i.a},"3a0b":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("9ab4"),i=r.__importDefault(t("2b0e")),o=r.__importDefault(t("2f62"));i.default.use(o.default),n.default=new o.default.Store({state:{},mutations:{},actions:{}})},"3ab0":function(e,n,t){"use strict";t.r(n);var r=t("3197"),i=t("c45f");for(var o in i)"default"!==o&&function(e){t.d(n,e,(function(){return i[e]}))}(o);var a=t("2877"),s=t("6544"),l=t.n(s),u=t("7496"),c=t("40dc"),d=t("5bc1"),f=t("8212"),p=t("8336"),m=t("62ad"),b=t("a523"),g=t("a75b"),h=t("ce7e"),v=t("132d"),y=t("adda"),_=t("8860"),x=t("56b0"),w=t("da13"),k=t("1800"),j=t("5d23"),D=t("f774"),T=t("0fd9"),S=t("2fa4"),A=t("e0c7"),C=t("8654"),O=t("2a7f"),L=t("3a2f"),N=Object(a["a"])(i["default"],r["a"],r["b"],!1,null,null,null);n["default"]=N.exports,l()(N,{VApp:u["a"],VAppBar:c["a"],VAppBarNavIcon:d["a"],VAvatar:f["a"],VBtn:p["a"],VCol:m["a"],VContainer:b["a"],VContent:g["a"],VDivider:h["a"],VIcon:v["a"],VImg:y["a"],VList:_["a"],VListGroup:x["a"],VListItem:w["a"],VListItemAction:k["a"],VListItemContent:j["g"],VListItemTitle:j["k"],VNavigationDrawer:D["a"],VRow:T["a"],VSpacer:S["a"],VSubheader:A["a"],VTextField:C["a"],VToolbarTitle:O["c"],VTooltip:L["a"]})},"3d48":function(e,n,t){"use strict";t.r(n);var r=t("b636"),i=t.n(r);for(var o in r)"default"!==o&&function(e){t.d(n,e,(function(){return r[e]}))}(o);n["default"]=i.a},"3dfd":function(e,n,t){"use strict";t.r(n);var r=t("4f55"),i=t("6f68");for(var o in i)"default"!==o&&function(e){t.d(n,e,(function(){return i[e]}))}(o);t("5c0b");var a=t("2877"),s=Object(a["a"])(i["default"],r["a"],r["b"],!1,null,null,null);n["default"]=s.exports},"3e70":function(e,n,t){"use strict";t("b0c0"),Object.defineProperty(n,"__esModule",{value:!0});var r=t("9ab4"),i=r.__importDefault(t("2b0e")),o=t("4a5b"),a=r.__importDefault(t("e0c1")),s=t("4ad6"),l=t("5034");n.default=i.default.extend({computed:{html:function(){var e,n;return a.default(o.getBlogsDetails(null===(e=this.$route)||void 0===e?void 0:null===(n=e.params)||void 0===n?void 0:n.id),{sanitize:!0})}},beforeRouteUpdate:function(e,n,t){var r;document.title=s.DATA[+(null===e||void 0===e?void 0:null===(r=e.params)||void 0===r?void 0:r.id)].name,t()},mounted:function(){var e,n;sessionStorage.tempTitle=document.title,document.title=s.DATA[+(null===(e=this.$route)||void 0===e?void 0:null===(n=e.params)||void 0===n?void 0:n.id)].name},destroyed:function(){document.title=sessionStorage.tempTitle||l.appName,sessionStorage.removeItem("tempTitle")}})},"3f05":function(e,n,t){"use strict";t.r(n);var r=t("299d"),i=t("3408");for(var o in i)"default"!==o&&function(e){t.d(n,e,(function(){return i[e]}))}(o);var a=t("2877"),s=Object(a["a"])(i["default"],r["a"],r["b"],!1,null,null,null);n["default"]=s.exports},"4a5b":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("4ad6");function i(e,n){return parseInt(String(Math.random()*(n-e+1)),10)+e}function o(e){return Array.isArray(e)||null===e?"":r.DATA[+e].content||e}n.randomNumber=i,n.getBlogsDetails=o},"4ad6":function(e,n,t){"use strict";t("99af"),t("d81d"),t("b0c0");var r=t("448a");Object.defineProperty(n,"__esModule",{value:!0});var i=t("9ab4"),o=i.__importDefault(t("6837")),a=i.__importDefault(t("c49c")),s=i.__importDefault(t("9cb1")),l=i.__importDefault(t("b20b"));n.DATA=[{content:o.default,name:"JS继承的实现方式"},{content:a.default,name:"Nuxt配合Node在实际生产中的应用"},{content:s.default,name:"从0开始学习Typescript"},{content:l.default,name:"简单的富文本编辑器实践"}],n.default=[{divider:!0},{heading:"Blogs"}].concat(r(n.DATA.map((function(e,n){return{icon:null,text:e.name,to:"/blogs/".concat(n)}}))))},"4f55":function(e,n,t){"use strict";var r=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("Layout",[t("router-view")],1)},i=[];t.d(n,"a",(function(){return r})),t.d(n,"b",(function(){return i}))},5034:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.appName="This is Cupertino UI"},"5c0b":function(e,n,t){"use strict";var r=t("1755"),i=t.n(r);i.a},"5f86":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("9ab4"),i=r.__importDefault(t("2b0e")),o=r.__importDefault(t("8c4f")),a=r.__importDefault(t("bb51")),s=r.__importDefault(t("3f05")),l=r.__importDefault(t("325a")),u=r.__importDefault(t("e72f")),c=r.__importDefault(t("95e5"));i.default.use(o.default),n.default=new o.default({mode:"hash",base:"/Jason.github.io/",routes:[{path:"/",name:"home",component:a.default},{path:"/what-will-i-eat/index",name:"what-will-i-eat",component:s.default},{path:"/generate-svg/index",name:"generate-svg",component:l.default},{path:"/blogs/:id",name:"blogs",component:u.default,children:[{path:"",component:c.default}]}]})},6836:function(e,n,t){"use strict";var r=t("07de"),i=t.n(r);i.a},6837:function(e,n){e.exports="# 测试用"},"6b61":function(e,n,t){"use strict";var r=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{class:["topic",{topic__error:Object.values(e.errorMap)[0]}]},[t("p",{staticClass:"title"},[e._v("#"+e._s(e.serialNumber)+"、"+e._s(e.data.title))]),t("main",{staticClass:"options-block"},e._l(e.data.options,(function(n,r){return t("a",{key:n.id,class:["options",{options__selected:n.id===e.selectedOpitonsID},{options__error:e.errorMap[n.id]}],on:{click:function(){return e.optionsHandler(n.id)}}},[e._v(" "+e._s(e.optionsSymbol[+r])+" 、"+e._s(n.name)+" ")])})),0)])},i=[];t.d(n,"a",(function(){return r})),t.d(n,"b",(function(){return i}))},"6f68":function(e,n,t){"use strict";t.r(n);var r=t("72de"),i=t.n(r);for(var o in r)"default"!==o&&function(e){t.d(n,e,(function(){return r[e]}))}(o);n["default"]=i.a},"72de":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("9ab4"),i=r.__importDefault(t("2b0e")),o=r.__importDefault(t("3ab0"));n.default=i.default.extend({name:"App",components:{Layout:o.default},data:function(){return{}}})},"88e1":function(e,n,t){"use strict";var r=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"home"},[e._l(e.topicList,(function(n,r){return t("Topic",{key:r,attrs:{data:n,serialNumber:r+1,errorMap:e.errorList[r],onChange:e.topicHandler(r)}})})),t("button",{class:["button",{button__down:e.isSubmitBtnPressing}],on:{click:e.submitAndCheck,mousedown:function(n){e.isSubmitBtnPressing=!0}}},[e._v(" 提交 ")])],2)},i=[];t.d(n,"a",(function(){return r})),t.d(n,"b",(function(){return i}))},"95e5":function(e,n,t){"use strict";t.r(n);var r=t("2b20"),i=t("094d");for(var o in i)"default"!==o&&function(e){t.d(n,e,(function(){return i[e]}))}(o);var a=t("2877"),s=Object(a["a"])(i["default"],r["a"],r["b"],!1,null,null,null);n["default"]=s.exports},"9ab0":function(e,n,t){},"9cb1":function(e,n){e.exports='在学习**Typescript**之前，早已听过、看过很多人对其的赞扬，**强类型**、**静态类型**等等的关键词一直伴随着我对它的认知。经过一段时间（又或者是断断续续）的学习，也大致算是入门了。\r\n\r\n#### 以下文章是我在学习中的一些心得与记录：\r\n# 编辑器以及相关配置\r\n- 安装 Typescript\r\n\r\n```\r\nnpm install -g typescript\r\n```\r\n- 编辑器方面我们选择 VSCode ，Typescript 本身就是由 Microsoft 开源的，配置自家的编辑器，对 Typescript 的第一方支持，体验简直不要太爽，ctrl 配置 鼠标移到对应变量、接口、类等字段上会有惊喜哦；\r\n- 插件方面，TSLint 是必须的，它可以在编辑器中就提示你语法的错误，减少 Fail completion ，红红的一条波浪线去掉的那一瞬间，简直是强迫症的福利；\r\n- 以上准备好后，我们需要给Typescript添加相关编译配置了( Typescript 必须编译成 Javascript 才能被直接运行，类似 Java -> Class )，首先需要在根目录新建文件 —— “ tsconfig.json ”，相关配置可参考[官网文档](https://www.tslang.cn/docs/handbook/compiler-options.html)。我的常用配置：\r\n\r\n```json\r\n// tsconfig.json\r\n{\r\n  "compilerOptions": {\r\n    "target": "es5",\r\n    // 这可以对 `this` 上的数据属性进行更严格的推断\r\n    "strict": true,\r\n    // 如果使用 webpack 2+ 或 rollup，可以利用 tree-shake:\r\n    "module": "es2015",\r\n    "moduleResolution": "node",\r\n    "sourceMap": true,\r\n    // 此选项可以给ts文件编译时自动生成声明文件，我在一些需要把ts转换成js的情况下开启\r\n    "declaration": true  \r\n  }\r\n}\r\n```\r\n- 以上已经把运行ts最简单的平台给配置好了，对于没有用过ts的同学，其实在这里或许会有点云里雾里的感觉，不过没事，后面慢慢就孰能生巧了。\r\n\r\n# 编写第一个ts文件并运行它\r\n- 新建文件 test.ts\r\n\r\n```ts\r\n// test.ts\r\nconsole.log(\'Hello World!\')\r\n```\r\n- 此时目录结构如下\r\n![image](https://user-images.githubusercontent.com/18693417/43575454-76f380ca-9679-11e8-9cfb-9f2646021e4e.png)\r\n\r\n- 编译ts\r\n    - 使用VSCode的快捷键 Shift + Ctrl + B 开启如下选择框：\r\n![image](https://user-images.githubusercontent.com/18693417/43575627-e4dc61e2-9679-11e8-9f9a-e1d38274c280.png)\r\n    - 这里选哪个都可以，选择“构建”，则表示编译一次就退出编译；选择“监视”，则相当于开启了“watch”选项，编译时会一直监听ts文件的改变，修改一次编译一次；我这里选择“构建”；\r\n    - 构建后，目录结构如下：\r\n![image](https://user-images.githubusercontent.com/18693417/43575839-658f43b8-967a-11e8-9d29-4f6ec02192a9.png)\r\n    - .d.ts文件是相应ts的[声明文件](https://www.tslang.cn/docs/handbook/declaration-files/introduction.html)，具体可以参考官方文档； .js 则是相应ts文件构建编译后的js文件，内部跟ts源文件大致相同：\r\n![image](https://user-images.githubusercontent.com/18693417/43576065-f8daa13a-967a-11e8-9765-b226b9e4458e.png)\r\n- **node test** 运行一下\r\n- 结果：\r\n![image](https://user-images.githubusercontent.com/18693417/43576137-2df6db36-967b-11e8-8b48-e8b9ab4bc1db.png)\r\n- 完美~\r\n# 为已有的Webpack项目添加ts语法支持\r\n> 需要注意：新版的Typescript（编写这篇心得时，Typescript的版本刚更新到**3.0**）需要**webpack4**+版本才能正常运行\r\n- 假设目录结构如下：\r\n\r\n```\r\n│  .babelrc                               // babel配置文件\r\n│  .gitignore\r\n│  index.html                             // 页面文件\r\n│  index.js                               // 入口文件\r\n│  package-lock.json\r\n│  package.json                           // npm init\r\n│  webpack.config.js                      // webpack 配置文件\r\n│\r\n└─dist                                    // 打包后的目录\r\n        bundle.js\r\n        index.html\r\n```\r\n- 这是一个AngularJs 1.5.8 的项目，其入口文件代码如下，主要是测试Angular.config和Angular.run的执行顺序：\r\n\r\n```js\r\nrequire(\'angular\');\r\n\r\nvar myApp = angular.module("init", [ "exampleApp.Services", "exampleApp.Directives"]);\r\n\r\nmyApp.constant("startTime", new Date().toLocaleString());\r\nmyApp.config(function (startTime) {\r\n    console.log("Main module config: " + startTime);\r\n});\r\nmyApp.run(function (startTime) {\r\n    console.log("Main module run: " + startTime);\r\n})\r\n\r\nangular.module("exampleApp.Directives", [])\r\n    .directive("highlight", function ($filter) {\r\n        var dayFilter = $filter("dayName");\r\n        return function (scope, element, attrs) {\r\n            if (dayFilter(scope.day) == attrs["highlight"]) {\r\n                element.css("color", "red");\r\n            }\r\n        }\r\n    })\r\n\r\nvar now = new Date();\r\nmyApp.value("nowValue", now);\r\nangular.module("exampleApp.Services", [])\r\n    .service("days", function (nowValue) {\r\n        this.today = nowValue.getDay();\r\n        this.tomorrow = this.today + 1;\r\n    })\r\n    .config(function () {\r\n        console.log("Services module config: (no time)");\r\n    })\r\n    .run(function (startTime) {\r\n        console.log("Services module run: " + startTime);\r\n    })\r\n```\r\n- 此时项目一切正常，我们开始为其添加ts语法支持；\r\n- 目录下加入tsconfig.json配置文件：\r\n\r\n```\r\n│  .babelrc                          // babel配置文件\r\n│  .gitignore\r\n│  index.html                        // 页面文件\r\n│  index.js                          // 入口文件\r\n│  package-lock.json\r\n│  package.json                      // npm init\r\n│  tsconfig.json --------------------// ts配置文件\r\n│  webpack.config.js                 // webpack 配置文件\r\n│\r\n└─dist                               // 打包后的目录\r\n        bundle.js\r\n        index.html\r\n```\r\n- 对 webpack 添加对 typescript 支持：\r\n\r\n```\r\nnpm i -D ts-loader typescript\r\n```\r\n\r\n```js\r\n// 在 module.rules 添加 ts-loader 并修改入口文件为index.ts\r\n{\r\n        test: /\\.ts|\\.tsx$/,\r\n        loader: \'ts-loader\',\r\n        exclude: /node_modules/,\r\n}\r\n```\r\n- 把目录下的index.js改为index.ts文件，此时配合VSCode，index.ts肯定是一堆红色波浪线的，如下\r\n![image](https://user-images.githubusercontent.com/18693417/43635605-2e00bcba-9742-11e8-8d29-a05d71c17527.png)\r\n- ### 开始修复小红线；\r\n- 为 index.ts 添加声明文件\r\n    - 在index.ts的目录下新建index.d.ts文件\r\n\r\n```ts\r\n// index.d.ts\r\n/**\r\n * 通过路径导入模块\r\n * @param {string} moduleName\r\n * @returns {*}\r\n */\r\ndeclare function require(moduleName: string): any;\r\n```\r\n- 在 index.ts 中导入声明文件\r\n\r\n```ts\r\n// index.ts开头插入\r\n/// <reference path="./index.d.ts" />\r\n```\r\n- “require” 的小红线消失\r\n![image](https://user-images.githubusercontent.com/18693417/43635937-38478ab8-9743-11e8-8968-785c77b863b1.png)\r\n\r\n- 修改 angular 引入的方式\r\n\r\n```ts\r\n- require(\'angular\');\r\n           👇\r\n+ import * as angular from \'angular\';\r\n```\r\n- 新增警告提示如下：\r\n![image](https://user-images.githubusercontent.com/18693417/43636207-fc36478e-9743-11e8-9d86-c4c4d75ff37e.png)\r\n- 遇到这些共用库缺少声明文件的情况，可以到[TypeSearch](http://microsoft.github.io/TypeSearch/)搜索下载网上编写好的声明文件，这里我就直接安装了：\r\n\r\n```\r\nnpm i -D  @types/angular\r\n```\r\n- 安装好后，又消灭一个小红线\r\n![image](https://user-images.githubusercontent.com/18693417/43636375-7a567c74-9744-11e8-9617-c4fa059e1be1.png)\r\n- 再根据红线提醒，根据ts语法，为函数或其他变量添加类型声明，红线全部消灭，舒服！\r\n\r\n```ts\r\n// index.ts\r\n/// <reference path="./index.d.ts" />\r\n\r\nimport * as angular from \'angular\';\r\n\r\nvar myApp = angular.module("init", ["exampleApp.Services", "exampleApp.Directives"]);\r\n\r\nmyApp.constant("startTime", new Date().toLocaleString());\r\nmyApp.config(function (startTime: String) {\r\n    console.log("Main module config: " + startTime);\r\n});\r\nmyApp.run(function (startTime: String) {\r\n    console.log("Main module run: " + startTime);\r\n})\r\n\r\nangular.module("exampleApp.Directives", [])\r\n    .directive("highlight", function ($filter) {\r\n        var dayFilter = $filter("dayName");\r\n        return function (scope: any, element, attrs) {\r\n            if (dayFilter(scope.day) == attrs["highlight"]) {\r\n                element.css("color", "red");\r\n            }\r\n        }\r\n    })\r\n\r\nvar now = new Date();\r\nmyApp.value("nowValue", now);\r\nangular.module("exampleApp.Services", [])\r\n    .service("days", function (this: Day, nowValue: Date) {\r\n        this.today = nowValue.getDay();\r\n        this.tomorrow = this.today + 1;\r\n    })\r\n    .config(function () {\r\n        console.log("Services module config: (no time)");\r\n    })\r\n    .run(function (startTime: string) {\r\n        console.log("Services module run: " + startTime);\r\n    })\r\n```\r\n\r\n```ts\r\n// index.d.ts\r\n/**\r\n * 通过路径导入模块\r\n * @param {string} moduleName\r\n * @returns {*}\r\n */\r\ndeclare function require(moduleName: string): any;\r\n\r\ninterface Day {\r\n    today?: number;\r\n    tomorrow?: number;\r\n}\r\n```\r\n![image](https://user-images.githubusercontent.com/18693417/43637243-0642a260-9747-11e8-96b3-3ab886a54da2.png)\r\n- 最终目录结构：\r\n```\r\n│  .babelrc                               // babel配置文件\r\n│  .gitignore\r\n│  index.d.ts                             // 入口ts文件声明文件\r\n│  index.html                             // 页面文件\r\n│  index.ts                               // 入口ts文件\r\n│  package-lock.json\r\n│  package.json                           // npm init\r\n│  tsconfig.json                          // ts配置文件\r\n│  webpack.config.js                      // webpack 配置文件\r\n│\r\n└─dist                                    // 打包后的目录\r\n        bundle.js\r\n        index.html\r\n```\r\n\r\n# 总结\r\n文章代码比较多，但是十分实用。\r\n\r\nangularjs + webpack4 + typescript 这个组合也十分不常见，这种典型的例子或许说明 typescript 的应用场景可以十分广泛，具体语法大家可以到[官方文档](https://www.tslang.cn/docs/handbook/basic-types.html)好好学习。\r\n\r\n希望这篇文章对入门 Typescript 的同学会有所帮助'},"9f6c":function(e,n,t){"use strict";t.r(n);var r=t("e6bc"),i=t.n(r);for(var o in r)"default"!==o&&function(e){t.d(n,e,(function(){return r[e]}))}(o);n["default"]=i.a},b20b:function(e,n){e.exports='### 富文本编辑器这个东西，其实应用场景挺多的；产品说，这里文案没事我就要改一改，我还要一个五彩斑斓的黑色，好吧，我们写一个富文本编辑器给TA吧。\r\n> 富文本编辑器有很多种，包括用textarea写markdown语法、开启contentEditable的div模式以及开启designModed的iframe模式。这里我主要介绍一下iframe的富文本编辑器，个人认为这是拓展性最强的（坑也是最多的）。\r\n- ### 初始化（这里就不多提了，也就是写一个的Iframe标签，确保能通过js拿到就行了）\r\n>index.html\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang="en">\r\n\r\n<head>\r\n    <meta charset="UTF-8">\r\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\r\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\r\n    <title>Document</title>\r\n</head>\r\n\r\n<body>\r\n    <iframe frameBorder=0 id="iframe"></iframe>\r\n</body>\r\n<script src="./index.js"><\/script>\r\n</html>\r\n```\r\n> index.js\r\n\r\n```js\r\nconst iframe = document.querySelector(\'#iframe\').contentWindow.document; // 获取iframe中的document\r\niframe.designMode = "on"; // 开启设计模式\r\n```\r\n此时，页面中的 Iframe 已经处于**可编辑状态**。\r\n- ### 来点默认提示语(Placeholder)\r\n- 先来点样式(当然是写在iframe的头部啦)\r\n\r\n```js\r\niframe.open();\r\niframe.writeln(\r\n    `<style>\r\n        ::-webkit-scrollbar {\r\n            display: none;\r\n        }\r\n        *{\r\n            margin:0;\r\n            padding:0\r\n        }\r\n        body,html\r\n            {font-size:4vw;width:100%;height:100%;box-sizing: border-box;color: #333;font-family:PingFangSC-Regular, sans-serif;}\r\n        body\r\n            {padding:4vw 3.33vw;line-height: 1.5;word-break:break-all;}\r\n    </style>`\r\n);\r\niframe.close();\r\n```\r\n- 写几个字\r\n\r\n```js\r\n iframe.body.innerHTML = `<p style="color:#b2b2b2;line-height:1;">动动手指头，写个黑板报~</p>`;\r\n```\r\n- 此时iframe是这样子的：\r\n![iframe](https://user-images.githubusercontent.com/18693417/43066469-506ae2f2-8e97-11e8-97dc-9710b9fe43e6.png)\r\n- html结构是这样子的：\r\n![iframe0](https://user-images.githubusercontent.com/18693417/43066646-ca496738-8e97-11e8-9437-0b397377c7e7.png)\r\n> 这里提一个点，如果需要说当用户点击时，默认提示语消失等操作，直接对iframe的Document进行相关事件监听处理一下就可以了,粘贴动作如下：\r\n\r\n```js\r\niframe.addEventListener("paste", function (e) {\r\n    var text = null;\r\n    text = (e.originalEvent || e).clipboardData.getData(\'text/plain\');\r\n    iframe.execCommand("insertText", false, text);\r\n    e.preventDefault();\r\n}, false);\r\n```\r\n- ### 添加图片\r\n\r\n```html\r\n\x3c!-- 添加一个input标签 --\x3e\r\n<form method="POST" encType="multipart/form-data" id="form">\r\n    <input type="file" name="img" accept="image/*" multiple="true">\r\n</form>\r\n```\r\n> 为form添加一个onChange事件\r\n\r\n```js\r\nconst form = document.querySelector(\'#form\');\r\nform.addEventListener(\'change\', function(e) => {\r\n    // 这里处理图片文件\r\n})\r\n```\r\n> 在onChange事件中添加逻辑处理\r\n\r\n```js\r\nconst staticContent = iframe.body.innerHTML; // 1. 获取到富文本编辑器中的内容\r\n\r\nconst imgQty = staticContent.match( // 2. 通过img标签判断当前富文本编辑器中存在的图片数量\r\n        /<img(.*?)>/\r\n    ) ?\r\n    staticContent.match(\r\n        /<img(.*?)>/g\r\n    ).length :\r\n    0;\r\n\r\nconst files = e.target.files; // 3. 获取待上传图片\r\n\r\nthis.prototype = { // 4. 初始化一些相关功能\r\n    readAndDoSth: file => { // 4.1. 读取文件\r\n        // 确保 `file.name` 符合我们要求的扩展名\r\n        if (!/\\.(jpe?g|png|gif)$/i.test(file.name)) {\r\n            alert("非法文件");\r\n            return;\r\n        }\r\n        //判断图片大小\r\n        const maxSize = 200 * 1024; //200K 这里可以自由发挥，可以根据文件大小决定是否压缩、读取图片后旋转等操作，我这里就不演示Canvas的相关操作了\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        const self = this;\r\n        reader.onload = function () {\r\n            // self.prototype.img2formdata(this.result, file.type, file.name); // 这里可以进行图片上传后再插入图片，逻辑与本地插入大概一致，这里我演示一下如何生成form表单\r\n            self.prototype.insertImg(this.result) // 本地插入\r\n        };\r\n    },\r\n    img2formdata: (basestr, type, name) => { // 4.2. 把图片转成FormData\r\n        let text = window.atob(basestr.split(",")[1]);\r\n        let buffer = new ArrayBuffer(text.length);\r\n        let ubuffer = new Uint8Array(buffer);\r\n\r\n        for (let i = 0; i < text.length; i++) {\r\n            ubuffer[i] = text.charCodeAt(i);\r\n        }\r\n\r\n        let Builder = window.WebKitBlobBuilder || window.MozBlobBuilder;\r\n        let blob;\r\n\r\n        if (Builder) {\r\n            let builder = new Builder();\r\n            builder.append(buffer);\r\n            blob = builder.getBlob(type);\r\n        } else {\r\n            blob = new window.Blob([buffer], {\r\n                type: type\r\n            });\r\n        }\r\n        let formdata = new FormData();\r\n        formdata.append("img", blob, name);\r\n        this.prototype.upload(formdata); // 上传Formdata\r\n    },\r\n    upload: formdata => { // 4.3. 上传到服务端\r\n        // 在这里可以把图片上传给服务端，换取服务端缓存地址，然后再插入具体路径的img标签，具体就不继续演示了。\r\n    },\r\n    insertImg: url => { //  4.4. 根据url插入图片\r\n        const image = new Image();\r\n        image.src = url;\r\n        const outerDiv = document.createElement("div");\r\n        outerDiv.appendChild(image);\r\n        try { // 获取当前焦点位置\r\n            iframe.getSelection().getRangeAt(0);\r\n            iframe.body.focus();\r\n            iframe.execCommand("insertHTML", false, outerDiv.innerHTML);\r\n        } catch (err) { // 无法获取焦点位置直接在文末插入\r\n            iframe.body.innerHTML += outerDiv.innerHTML\r\n        }\r\n    }\r\n}\r\n\r\n// 5. 初始完所有需要用到的变量后，开始执行读取文件（对单个文件进行处理）\r\nif (files.length < 10 - imgQty && files.length > 0) { // 控制可上传图片数量\r\n    [].forEach.call(files, this.prototype.readAndDoSth);\r\n    e.target.value = ""; // 清空form表单\r\n} else {\r\n    alert("只能上传9张图片");\r\n}\r\n```\r\n![iframe1](https://user-images.githubusercontent.com/18693417/43117312-b5c1272c-8f3e-11e8-8056-26cabee503b8.png)\r\n- 以上就是插入图片的代码了，代码之间的耦合性比较高，后面有空我再解一下耦。（具体代码请参考目录中的index.js文件）\r\n- 当然，以上代码可能在兼容性存在一定的问题，但也能适配较多的平台了，有相关疑问或是技术难题欢迎在下方评论区提出来，谢谢！\r\n> 我就不写样式，怎么D~'},b636:function(e,n,t){"use strict";t("cb29");var r=t("9523"),i=t("970b"),o=t("5bc3"),a=t("6b58"),s=t("36c6"),l=t("ed6d");Object.defineProperty(n,"__esModule",{value:!0});var u=t("9ab4"),c=t("60a3"),d=u.__importDefault(t("cd7d")),f=u.__importDefault(t("e979")),p=function(e){function n(){var e;return i(this,n),e=a(this,s(n).apply(this,arguments)),e.isPass=!1,e.isSubmitBtnPressing=!1,e.topicList=f.default,e.answerList=new Array(f.default.length),e.errorList=new Array(f.default.length).fill({}),e}return l(n,e),o(n,[{key:"topicHandler",value:function(e){var n=this;return function(t){n.$set(n.answerList,e,t)}}},{key:"submitAndCheck",value:function(){for(var e=!0,n=0;n<this.answerList.length;n++)if(void 0===this.answerList[n])return void alert("第".concat(n+1,"题还未填写"));for(var t=0;t<this.answerList.length;t++){var i=this.answerList[t]!==f.default[t].answer;i&&(e=!1),i||(this.isPass=!0),this.$set(this.errorList,t,r({},this.answerList[t],i))}this.isPass=e}},{key:"submitBtnPressUp",value:function(){this.isSubmitBtnPressing=!1}},{key:"mounted",value:function(){document.addEventListener("mouseup",this.submitBtnPressUp)}},{key:"destroy",value:function(){document.removeEventListener("mouseup",this.submitBtnPressUp)}}]),n}(c.Vue);p=u.__decorate([c.Component({components:{Topic:d.default}})],p),n.default=p},b861:function(e,n,t){"use strict";t("99af");var r=t("448a");Object.defineProperty(n,"__esModule",{value:!0});var i=t("9ab4"),o=i.__importDefault(t("2b0e")),a=i.__importDefault(t("4ad6"));n.default=o.default.extend({data:function(){return{drawer:!0,dialog:!1,items:[{icon:"mdi-contacts",text:"Home",to:"/"},{icon:"mdi-history",text:"What Will I Eat",to:"/what-will-i-eat/index"},{icon:"mdi-content-copy",text:"Generate SVG",to:"/generate-svg/index"}].concat(r(a.default))}}})},bb3e:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("9483");r.register("".concat("/Jason.github.io/","service-worker.js"),{ready:function(){console.log("App is being served from cache by a service worker.\nFor more details, visit https://goo.gl/AFskqB")},registered:function(){console.log("Service worker has been registered.")},cached:function(){console.log("Content has been cached for offline use.")},updatefound:function(){console.log("New content is downloading.")},updated:function(){console.log("New content is available; please refresh.")},offline:function(){console.log("No internet connection found. App is running in offline mode.")},error:function(e){console.error("Error during service worker registration:",e)}})},bb51:function(e,n,t){"use strict";t.r(n);var r=t("88e1"),i=t("3d48");for(var o in i)"default"!==o&&function(e){t.d(n,e,(function(){return i[e]}))}(o);t("0f82");var a=t("2877"),s=Object(a["a"])(i["default"],r["a"],r["b"],!1,null,"4bb94640",null);n["default"]=s.exports},c45f:function(e,n,t){"use strict";t.r(n);var r=t("b861"),i=t.n(r);for(var o in r)"default"!==o&&function(e){t.d(n,e,(function(){return r[e]}))}(o);n["default"]=i.a},c49c:function(e,n){e.exports="### 上个星期，甲方说要在应用上做一个促活活动（其实就是让用户领OFO的骑车券），考虑到之前在我另一个应用上已经做过客户端token验证，想想，撸起袖子直接在之前的Node上开搞吧。\r\n\r\n- ### Nuxt\r\n 这个东西类似与React中的Next，做Vue服务端渲染在Nuxt确实挺方便的，整个目录结构与Vue-Cli也差不多，但我觉得更清晰明了，而且有很丰富的配置，包括我最喜欢的顶部Loadding条啊、Layer主题模板啊、服务端渲染有益于SEO啊、自动生成Router啊等等等等。这里我就不详细展开了，选择他主要是用习惯了，而且性能也很不错。\r\n\r\n- ### Express\r\n它就是一个Koa、egg等的一个服务端的工具，封装很多便捷的方法。这里也不详细展开。\r\n\r\n### 第一步 完成静态页面\r\n+ 在这里就不详细说明HTML怎么构建、Vue使用方法等等等不相关的问题，首先页面效果如下图：\r\n![default](https://user-images.githubusercontent.com/18693417/42724526-71f0ddde-87a6-11e8-94c7-4428932f7a37.png)\r\n+ 点击确认领取后，向后端发送请求，获取券码：\r\n![1](https://user-images.githubusercontent.com/18693417/42724542-d96e0de2-87a6-11e8-9f4e-cb05455035f5.png)\r\n+ 大致业务流程就是这样子了。\r\n\r\n### 第二步 基于webview完成token验证\r\n+ 甲方公司的token是怎么给到用户的呢？\r\n    - 用户登录客服端\r\n    - 用户在webview访问相应的地址\r\n    - 客户端把token等信息绑定在地址上让服务端接受，并向服务端发送GET请求\r\n    - 服务端接受到Token后，根据Token信息验证用户身份并返回页面给用户\r\n+ 所以也就是相当于，此时我手上的Node需要完成一个Token验证的需求，开搞：\r\n> 这里必须说一下Session这个东西，一开始当我完成了Token验证的时候，可是发现两个用户同时访问的时候，后访问者会重新执行一次对应请求里的方法，相当于很多数据都初始化甚至重新赋值。完全不知道怎么把用户分开，问了一下JAVA的同学，他们说框架自带会分开，这就让我很忧郁了。其实，他们也知道Session这个东西，只是一直这样用后习惯了也就突然说不清楚甚至想到它的存在了。\r\n我一开始想到的是用Cookie验证对应浏览器，但总觉得这种方法有点古老，不够高大上（个人主观看法，勿喷），储存量也很有限。所以又探索了一天，得知有个Session这个东西可以验证对应浏览器（好吧，其实也就是把Cookie当成数据索引）。知道了有这么一回事之后也就茅塞顿开了。\r\n\r\n```js\r\n// 引入一些工具\r\nconst http = require('http')\r\nconst express = require(\"express\");\r\nconst session = require('express-session');\r\n\r\nconst nuxtapp = express(); // 创建一个express应用\r\n\r\n// 设置SESSION配置\r\nnuxtapp.use(session({\r\n  secret: 'key' // 建议使用 128 个字符的随机字符串 \r\n}));\r\n\r\n// 处理OPTIONS请求（axios发送POST请求时会先发送一个OPTION请求验证服务器的连通情况）\r\nnuxtapp.use(function (req, res, next) {\r\n  if ('OPTIONS' === req.method) {\r\n    res.sendStatus(200);\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\n// 写一个验证Token的接口\r\nnuxtapp.get('/getphone', (req, res) => {\r\n    if (!req.query.token) {\r\n      //  if else ...\r\n      res.sendStatus(200)\r\n      return;\r\n    }\r\n    // 这里创建请求只是举一个例子，有的Token可以本地解析，有的需要服务端向另一个服务端请求解析。（参考微信）\r\n    const request = http.request({\r\n      host: \"api.example.com\",\r\n      headers: {\r\n        'Content-Type': ' application/json',\r\n        'Accept-Encoding': 'utf-8', //这里设置返回的编码方式 设置其他的会是乱码\r\n        'Accept-Language': 'zh-CN,zh;q=0.8',\r\n        'Connection': 'keep-alive',\r\n      },\r\n      path: '/getTokenorSth',\r\n      port: 'port',\r\n      method: 'POST'\r\n    }, response => {\r\n      let data = \"\"; // 创建变量记录数据\r\n      response.on(\"data\", function (chunk) {\r\n        data += chunk\r\n      })\r\n      response.on(\"end\", function () { // 设置seesion\r\n        try {\r\n          if (!req.session.id) {\r\n            // set session like : req.session.id= JSON.parse(data)\r\n          }\r\n          res.sendStatus(200)\r\n        } catch (err) {\r\n          console.log(err);\r\n          res.sendStatus(500)\r\n        }\r\n      })\r\n    }).on('error', (e) => {\r\n      console.log(`错误信息: ${e.message}`);\r\n      res.sendStatus(500)\r\n    });\r\n    // POST Data\r\n    request.write(JSON.stringify({\r\n        example:example,\r\n        token: req.query.token\r\n    })); // 用户传过来的数据 post\r\n    request.end();\r\n})\r\n\r\nnuxtapp.listen(port || 80, '0.0.0.0')\r\nconsole.log(\"已开启服务器，请访问 —— localhost:\" + port || 80)\r\n```\r\n\r\n### 第三步 服务端代理（这里我也有个点不是很确定，所谓淘宝Node+JAVA是不是就是这种模式）\r\n> 毕竟我还是个前端，功能方面的实现还是交给资深大JAVA吧（若是给我时间，我还真的想写一下SQL复习一下）\r\n+ 用户访问的时候还是向Node请求，这里需要提一点的就是，假如后端提供了很多接口，你不一定每个都要写一个app.get(‘/api’)或者什么，express的文档上有提到类似这种写法：\r\n\r\n```js\r\nnuxtapp.all([\"/api1/*\",\"/api2/*\"], requestFunction)\r\n```\r\n其他就跟上面token验证差不多了\r\n\r\n### 第四步 用Express执行Nuxt\r\n+ 在Nuxt官网上其实也有部分代码教你如何用自己写的Node去运行，但一直不是很完善，有点差强人意。我在这里就补充一下我的理解，**哪里写得不对，请尽管喷，谢谢喷我的每一个人**。\r\n\r\n```js\r\n// nuxt\r\nconst {\r\n  Nuxt,\r\n  Builder\r\n} = require('nuxt') // 引入核心构建属性\r\n\r\n// 判断开发环境\r\nconst isProd = (process.env.NODE_ENV === 'production')\r\nconst port = process.env.PORT || 80\r\n\r\n// 引入nuxt配置\r\nconst config = require('./nuxt.config.js')\r\nconfig.dev = !isProd;\r\nconst nuxt = new Nuxt(config);\r\n\r\n// 判断生产模式 dev(开发者模式)表示重新构建 ；pro(生产模式)表示直接从yanr build的文件直接执行\r\nif (config.dev) {\r\n  new Builder(nuxt).build()\r\n    .then(listen)\r\n    .catch((error) => {\r\n      console.error(error)\r\n      process.exit(1)\r\n    })\r\n} else {\r\n  listen()\r\n}\r\n```\r\n以上的listen就是我在第二、三步写的相应接口的express服务器啦。\r\n+ 那么nuxt其实还并没有在代码中执行，new Nuxt一个Nuxt实例后返回一个nuxt方法，它其实是根据request,response去执行相应的渲染，其中我们要考虑到express()的各种接口的执行顺序，假如一开始就匹配到了第二步的代码的get请求，那么写在第二步代码后的all方法中的各种接口是接收不到的。\r\n+ 我考虑到的是接口不是无缘无故执行的，但用户请求是必然发生的。那么也就是当用户除了故意发送请求，全部由Nuxt接手。所以Nuxt会是放在最后让其渲染页面并交给用户，为了方便验证Token，我把验证Token的请求放在首页让浏览器捕获Token以及相应信息后交给Node执行手动登陆。（其实也可以通过在nuxt渲染前判断是否存在Token来决定是否进行token验证，我就不在这里再进行大量代码的展示了）\r\n+ 结合以上思路，也就是在最后捕获所有GET请求并交手给Nuxt即可：\r\n\r\n```js\r\n// 最后捕获nuxt渲染\r\nnuxtapp.get('/*', (req, res) => {\r\n  nuxt.render(req, res)\r\n})\r\n```\r\n\r\n"},c522:function(e,n,t){"use strict";t("99af"),Object.defineProperty(n,"__esModule",{value:!0});var r=t("9ab4"),i=r.__importDefault(t("2b0e")),o=t("e1e9"),a=t("4a5b");n.default=i.default.extend({data:function(){return{VegetarianDishList:o.VegetarianDishList,ChivesList:o.ChivesList,CookMethodsList:o.CookMethodsList,result:""}},methods:{getResult:function(){var e=a.randomNumber(0,this.VegetarianDishList.length-1),n=a.randomNumber(0,this.ChivesList.length-1),t=a.randomNumber(0,this.CookMethodsList.length-1);this.result="\n        ".concat(this.VegetarianDishList[e],"\n        ").concat(this.CookMethodsList[t],"\n        ").concat(this.ChivesList[n],"\n      ")}}})},cc123:function(e,n,t){"use strict";var r=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"generate-svg"},[t("ul",[t("li",[e._v(" 请输入第一张图片的地址："),t("input",{directives:[{name:"model",rawName:"v-model",value:e.backgroundUrl,expression:"backgroundUrl"}],attrs:{type:"text"},domProps:{value:e.backgroundUrl},on:{input:function(n){n.target.composing||(e.backgroundUrl=n.target.value)}}})]),t("li",[e._v("请输入第二张图片的地址："),t("input",{directives:[{name:"model",rawName:"v-model",value:e.coverUrl,expression:"coverUrl"}],attrs:{type:"text"},domProps:{value:e.coverUrl},on:{input:function(n){n.target.composing||(e.coverUrl=n.target.value)}}})]),t("li",[e._v("请设置高度："),t("input",{directives:[{name:"model",rawName:"v-model",value:e.height,expression:"height"}],attrs:{type:"number"},domProps:{value:e.height},on:{input:function(n){n.target.composing||(e.height=n.target.value)}}}),e._v(" 像素(px)")]),t("li",[e._v("请设置宽度："),t("input",{directives:[{name:"model",rawName:"v-model",value:e.width,expression:"width"}],attrs:{type:"number"},domProps:{value:e.width},on:{input:function(n){n.target.composing||(e.width=n.target.value)}}}),e._v(" 像素(px)")])]),t("button",{staticClass:"btn",attrs:{"data-clipboard-text":e.clipboardText}},[e._v(" 点击复制代码 ")])])},i=[];t.d(n,"a",(function(){return r})),t.d(n,"b",(function(){return i}))},cd49:function(e,n,t){"use strict";t("e260"),t("e6cf"),t("cca6"),t("a79d"),Object.defineProperty(n,"__esModule",{value:!0});var r=t("9ab4"),i=r.__importDefault(t("2b0e")),o=r.__importDefault(t("3dfd")),a=r.__importDefault(t("5f86")),s=r.__importDefault(t("3a0b"));t("bb3e");var l=r.__importDefault(t("0670"));i.default.config.productionTip=!1,new i.default({router:a.default,store:s.default,vuetify:l.default,render:function(e){return e(o.default)}}).$mount("#app")},cd7d:function(e,n,t){"use strict";t.r(n);var r=t("6b61"),i=t("f7e5");for(var o in i)"default"!==o&&function(e){t.d(n,e,(function(){return i[e]}))}(o);t("6836");var a=t("2877"),s=Object(a["a"])(i["default"],r["a"],r["b"],!1,null,"484c4e3e",null);n["default"]=s.exports},d47e:function(e,n,t){"use strict";var r;Object.defineProperty(n,"__esModule",{value:!0}),function(e){e[e["A"]=0]="A",e[e["B"]=1]="B",e[e["C"]=2]="C",e[e["D"]=3]="D"}(r=n.optionsSymbol||(n.optionsSymbol={})),n.default={optionsSymbol:r}},e1e9:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.VegetarianDishList=["素菜测试1","素菜测试2","素菜测试3","素菜测试4"],n.ChivesList=["荤菜测试1","荤菜测试2","荤菜测试3","荤菜测试4"],n.CookMethodsList=["蒸","炒","灼"]},e6bc:function(e,n,t){"use strict";t("99af"),t("b680"),t("ac1f"),t("1276"),Object.defineProperty(n,"__esModule",{value:!0});var r=t("9ab4"),i=r.__importDefault(t("2b0e")),o=r.__importDefault(t("b311"));n.default=i.default.extend({data:function(){return{coverUrl:"",backgroundUrl:"",height:0,width:0,clipboard:null}},computed:{clipboardText:function(){var e=(this.height/this.width*100).toFixed(2),n=this.backgroundUrl.split("?")[0],t=this.coverUrl.split("?")[0];return'<p><br></p>\n<p style="max-height: 0;min-height: 0;overflow: hidden;">\n  <img class="rich_pages" data-ratio="1.16640625" data-s="300,640" src="'.concat(n,'" data-type="jpeg" data-w="1280" style="display:block;height:0 !important" _src="').concat(n,'">\n</p>\n<p style="max-height: 0;min-height: 0;overflow: hidden;">\n  <img class="rich_pages" data-ratio="1.16640625" data-s="300,640" src="').concat(t,'" data-type="jpeg" data-w="1280" style="display:block;height:0 !important" _src="').concat(t,'">\n</p>\n<section style="text-align: justify;display: inline-block;">\n  <section style="display: inline-block;vertical-align: middle;line-height: 0;box-sizing: border-box;width: ').concat(this.width,'px;">\n    <section style="background-image: url(&quot;').concat(n,"&quot;);background-position: 50% 50%;background-repeat: no-repeat;background-size: cover;background-attachment: scroll;width: 100%;margin-left: auto;margin-right: auto;box-sizing: border-box;height: 0;padding-bottom: ").concat(e,'%;">\n    </section>\n    <section style="box-sizing: border-box;margin-top: -').concat(e,"%;height: 0;padding-bottom:  ").concat(e,'%;">\n      <svg style="background-image: url(&quot;').concat(t,"&quot;);background-position: 50% 50%;background-repeat: no-repeat;background-size: cover;background-attachment: scroll;width: 100%;margin-left: auto;margin-right: auto;box-sizing: border-box;height: 0;padding-bottom:").concat(e,'%;" xmlns="http://www.w3.org/2000/svg" width="1">\n        <animate attributeName="width" style="box-sizing: border-box;" fill="freeze" to="0" from="1" duration="0.01" begin="click + 0.01s">\n        </animate>\n        <animate attributeName="opacity" style="box-sizing: border-box;" fill="freeze" dur="0.01" begin="click" from="1" to="0">\n        </animate>\n      </svg>\n    </section>\n  </section>\n</section>\n<p><br></p>')}},methods:{initClipboard:function(){var e,n;this.clipboard=new o.default(".btn"),null===this||void 0===this||null===(e=this.clipboard)||void 0===e||null===(n=e.on)||void 0===n||n.call(this.clipboard,"success",(function(e){alert("复制成功"),e.clearSelection()}))}},mounted:function(){this.initClipboard()},beforeDestroy:function(){var e,n;null===this||void 0===this||null===(e=this.clipboard)||void 0===e||null===(n=e.destroy)||void 0===n||n.call(this.clipboard)}})},e72f:function(e,n,t){"use strict";t.r(n);var r=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("router-view")},i=[],o=t("2877"),a={},s=Object(o["a"])(a,r,i,!1,null,null,null);n["default"]=s.exports},e979:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=[{title:'["1", "2", "3"].map(parseInt)',id:1,answer:14,options:[{id:11,name:'["1", "2", "3"]'},{id:12,name:"[1, 2, 3]"},{id:13,name:"[0, 1, 2]"},{id:14,name:"other"}]},{title:"[typeof null, null instanceof Object]",id:2,answer:21,options:[{id:21,name:'["object", false]'},{id:22,name:"[null, false]"},{id:23,name:'["object", true]'},{id:24,name:"other"}]},{title:"[[3,2,1].reduce(Math.pow), [].reduce(Math.pow)]",id:3,answer:31,options:[{id:31,name:"an error"},{id:32,name:"[9, 0]"},{id:33,name:"[9, NaN]"},{id:34,name:"[9, undefined]"}]},{title:"",code:"var val = 'smtg';\nconsole.log('Value is ' + (val === 'smtg') ? 'Something' : 'Nothing');",id:4,answer:41,options:[{id:41,name:'["object", false]'},{id:42,name:"[null, false]"},{id:43,name:'["object", true]'},{id:44,name:"other"}]},{title:"[typeof null, null instanceof Object]",id:2,answer:21,options:[{id:21,name:'["object", false]'},{id:22,name:"[null, false]"},{id:23,name:'["object", true]'},{id:24,name:"other"}]},{title:"[typeof null, null instanceof Object]",id:2,answer:21,options:[{id:21,name:'["object", false]'},{id:22,name:"[null, false]"},{id:23,name:'["object", true]'},{id:24,name:"other"}]},{title:"[typeof null, null instanceof Object]",id:2,answer:21,options:[{id:21,name:'["object", false]'},{id:22,name:"[null, false]"},{id:23,name:'["object", true]'},{id:24,name:"other"}]},{title:"[typeof null, null instanceof Object]",id:2,answer:21,options:[{id:21,name:'["object", false]'},{id:22,name:"[null, false]"},{id:23,name:'["object", true]'},{id:24,name:"other"}]},{title:"[typeof null, null instanceof Object]",id:2,answer:21,options:[{id:21,name:'["object", false]'},{id:22,name:"[null, false]"},{id:23,name:'["object", true]'},{id:24,name:"other"}]},{title:"[typeof null, null instanceof Object]",id:2,answer:21,options:[{id:21,name:'["object", false]'},{id:22,name:"[null, false]"},{id:23,name:'["object", true]'},{id:24,name:"other"}]}];n.default=r},f7e5:function(e,n,t){"use strict";t.r(n);var r=t("2af6"),i=t.n(r);for(var o in r)"default"!==o&&function(e){t.d(n,e,(function(){return r[e]}))}(o);n["default"]=i.a}});
//# sourceMappingURL=app.29d2f91b.js.map